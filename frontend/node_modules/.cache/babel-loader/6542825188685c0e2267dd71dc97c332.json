{"ast":null,"code":"var _jsxFileName = \"/app/src/pages/Chat/index.js\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, makeStyles, Paper, Tab, Tabs, TextField } from \"@material-ui/core\";\nimport ChatList from \"./ChatList\";\nimport ChatMessages from \"./ChatMessages\";\nimport { UsersFilter } from \"../../components/UsersFilter\";\nimport api from \"../../services/api\";\nimport { SocketContext } from \"../../context/Socket/SocketContext\";\nimport { has, isObject } from \"lodash\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    flex: 1,\n    padding: theme.spacing(2),\n    height: `calc(100% - 48px)`,\n    overflowY: \"hidden\",\n    border: \"1px solid rgba(0, 0, 0, 0.12)\"\n  },\n  gridContainer: {\n    flex: 1,\n    height: \"100%\",\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\n    backgroundColor: theme.palette.dark\n  },\n  gridItem: {\n    height: \"100%\"\n  },\n  gridItemTab: {\n    height: \"92%\",\n    width: \"100%\"\n  },\n  btnContainer: {\n    textAlign: \"right\",\n    padding: 10\n  }\n}));\nexport function ChatModal({\n  open,\n  chat,\n  type,\n  handleClose,\n  handleLoadNewChat\n}) {\n  const [users, setUsers] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  useEffect(() => {\n    setTitle(\"\");\n    setUsers([]);\n    if (type === \"edit\") {\n      const userList = chat.users.map(u => ({\n        id: u.user.id,\n        name: u.user.name\n      }));\n      setUsers(userList);\n      setTitle(chat.title);\n    }\n  }, [chat, open, type]);\n  const handleSave = async () => {\n    try {\n      if (!title) {\n        alert(\"Por favor, preencha o tÃ­tulo da conversa.\");\n        return;\n      }\n      if (!users || users.length === 0) {\n        alert(\"Por favor, selecione pelo menos um usuÃ¡rio.\");\n        return;\n      }\n      if (type === \"edit\") {\n        await api.put(`/chats/${chat.id}`, {\n          users,\n          title\n        });\n      } else {\n        const {\n          data\n        } = await api.post(\"/chats\", {\n          users,\n          title\n        });\n        handleLoadNewChat(data);\n      }\n      handleClose();\n    } catch (err) {}\n  };\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, \"Conversa\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    spacing: 2,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    xs: 12,\n    style: {\n      padding: 18\n    },\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"T\\xEDtulo\",\n    placeholder: \"T\\xEDtulo\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    variant: \"outlined\",\n    size: \"small\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    xs: 12,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(UsersFilter, {\n    onFiltered: users => setUsers(users),\n    initialUsers: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, \"Fechar\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSave,\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \"Salvar\")));\n}\nfunction Chat(props) {\n  const classes = useStyles();\n  const {\n    user\n  } = useContext(AuthContext);\n  const history = useHistory();\n  const [showDialog, setShowDialog] = useState(false);\n  const [dialogType, setDialogType] = useState(\"new\");\n  const [currentChat, setCurrentChat] = useState({});\n  const [chats, setChats] = useState([]);\n  const [chatsPageInfo, setChatsPageInfo] = useState({\n    hasMore: false\n  });\n  const [messages, setMessages] = useState([]);\n  const [messagesPageInfo, setMessagesPageInfo] = useState({\n    hasMore: false\n  });\n  const [messagesPage, setMessagesPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useState(0);\n  const isMounted = useRef(true);\n  const scrollToBottomRef = useRef();\n  const {\n    id\n  } = useParams();\n  const socketManager = useContext(SocketContext);\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  useEffect(() => {\n    if (isMounted.current) {\n      findChats().then(data => {\n        const {\n          records\n        } = data;\n        if (records.length > 0) {\n          setChats(records);\n          setChatsPageInfo(data);\n          if (id && records.length) {\n            const chat = records.find(r => r.uuid === id);\n            selectChat(chat);\n          }\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (isObject(currentChat) && has(currentChat, \"id\")) {\n      findMessages(currentChat.id).then(() => {\n        if (typeof scrollToBottomRef.current === \"function\") {\n          setTimeout(() => {\n            scrollToBottomRef.current();\n          }, 300);\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentChat]);\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketManager.getSocket(companyId);\n    socket.on(`company-${companyId}-chat-user-${user.id}`, data => {\n      if (data.action === \"create\") {\n        setChats(prev => [data.record, ...prev]);\n      }\n      if (data.action === \"update\") {\n        const changedChats = chats.map(chat => {\n          if (chat.id === data.record.id) {\n            setCurrentChat(data.record);\n            return {\n              ...data.record\n            };\n          }\n          return chat;\n        });\n        setChats(changedChats);\n      }\n    });\n    socket.on(`company-${companyId}-chat`, data => {\n      if (data.action === \"delete\") {\n        const filteredChats = chats.filter(c => c.id !== +data.id);\n        setChats(filteredChats);\n        setMessages([]);\n        setMessagesPage(1);\n        setMessagesPageInfo({\n          hasMore: false\n        });\n        setCurrentChat({});\n        history.push(\"/chats\");\n      }\n    });\n    if (isObject(currentChat) && has(currentChat, \"id\")) {\n      socket.on(`company-${companyId}-chat-${currentChat.id}`, data => {\n        if (data.action === \"new-message\") {\n          setMessages(prev => [...prev, data.newMessage]);\n          const changedChats = chats.map(chat => {\n            if (chat.id === data.newMessage.chatId) {\n              return {\n                ...data.chat\n              };\n            }\n            return chat;\n          });\n          setChats(changedChats);\n          scrollToBottomRef.current();\n        }\n        if (data.action === \"update\") {\n          const changedChats = chats.map(chat => {\n            if (chat.id === data.chat.id) {\n              return {\n                ...data.chat\n              };\n            }\n            return chat;\n          });\n          setChats(changedChats);\n          scrollToBottomRef.current();\n        }\n      });\n    }\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentChat, socketManager]);\n  const selectChat = chat => {\n    try {\n      setMessages([]);\n      setMessagesPage(1);\n      setCurrentChat(chat);\n      setTab(1);\n    } catch (err) {}\n  };\n  const sendMessage = async contentMessage => {\n    setLoading(true);\n    try {\n      await api.post(`/chats/${currentChat.id}/messages`, {\n        message: contentMessage\n      });\n    } catch (err) {}\n    setLoading(false);\n  };\n  const deleteChat = async chat => {\n    try {\n      await api.delete(`/chats/${chat.id}`);\n    } catch (err) {}\n  };\n  const findMessages = async chatId => {\n    setLoading(true);\n    try {\n      const {\n        data\n      } = await api.get(`/chats/${chatId}/messages?pageNumber=${messagesPage}`);\n      setMessagesPage(prev => prev + 1);\n      setMessagesPageInfo(data);\n      setMessages(prev => [...data.records, ...prev]);\n    } catch (err) {}\n    setLoading(false);\n  };\n  const loadMoreMessages = async () => {\n    if (!loading) {\n      findMessages(currentChat.id);\n    }\n  };\n  const findChats = async () => {\n    try {\n      const {\n        data\n      } = await api.get(\"/chats\");\n      return data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const renderGrid = () => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      className: classes.gridContainer,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: classes.gridItem,\n      md: 3,\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.btnContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        setDialogType(\"new\");\n        setShowDialog(true);\n      },\n      color: \"primary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 15\n      }\n    }, \"Nova\")), /*#__PURE__*/React.createElement(ChatList, {\n      chats: chats,\n      pageInfo: chatsPageInfo,\n      loading: loading,\n      handleSelectChat: chat => selectChat(chat),\n      handleDeleteChat: chat => deleteChat(chat),\n      handleEditChat: () => {\n        setDialogType(\"edit\");\n        setShowDialog(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      className: classes.gridItem,\n      md: 9,\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }\n    }, isObject(currentChat) && has(currentChat, \"id\") && /*#__PURE__*/React.createElement(ChatMessages, {\n      chat: currentChat,\n      scrollToBottomRef: scrollToBottomRef,\n      pageInfo: messagesPageInfo,\n      messages: messages,\n      loading: loading,\n      handleSendMessage: sendMessage,\n      handleLoadMore: loadMoreMessages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 13\n      }\n    })));\n  };\n  const renderTab = () => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      className: classes.gridContainer,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      md: 12,\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      value: tab,\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      onChange: (e, v) => setTab(v),\n      \"aria-label\": \"disabled tabs example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      label: \"Chats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Tab, {\n      label: \"Mensagens\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 13\n      }\n    }))), tab === 0 && /*#__PURE__*/React.createElement(Grid, {\n      className: classes.gridItemTab,\n      md: 12,\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.btnContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => setShowDialog(true),\n      color: \"primary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 15\n      }\n    }, \"Novo\")), /*#__PURE__*/React.createElement(ChatList, {\n      chats: chats,\n      pageInfo: chatsPageInfo,\n      loading: loading,\n      handleSelectChat: chat => selectChat(chat),\n      handleDeleteChat: chat => deleteChat(chat),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 13\n      }\n    })), tab === 1 && /*#__PURE__*/React.createElement(Grid, {\n      className: classes.gridItemTab,\n      md: 12,\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }\n    }, isObject(currentChat) && has(currentChat, \"id\") && /*#__PURE__*/React.createElement(ChatMessages, {\n      scrollToBottomRef: scrollToBottomRef,\n      pageInfo: messagesPageInfo,\n      messages: messages,\n      loading: loading,\n      handleSendMessage: sendMessage,\n      handleLoadMore: loadMoreMessages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 15\n      }\n    })));\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ChatModal, {\n    type: dialogType,\n    open: showDialog,\n    chat: currentChat,\n    handleLoadNewChat: data => {\n      setMessages([]);\n      setMessagesPage(1);\n      setCurrentChat(data);\n      setTab(1);\n      history.push(`/chats/${data.uuid}`);\n    },\n    handleClose: () => setShowDialog(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }\n  }, isWidthUp(\"md\", props.width) ? renderGrid() : renderTab()));\n}\nexport default withWidth()(Chat);","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","useParams","useHistory","Button","Dialog","DialogActions","DialogContent","DialogTitle","Grid","makeStyles","Paper","Tab","Tabs","TextField","ChatList","ChatMessages","UsersFilter","api","SocketContext","has","isObject","AuthContext","withWidth","isWidthUp","useStyles","theme","mainContainer","display","flexDirection","position","flex","padding","spacing","height","overflowY","border","gridContainer","backgroundColor","palette","dark","gridItem","gridItemTab","width","btnContainer","textAlign","ChatModal","open","chat","type","handleClose","handleLoadNewChat","users","setUsers","title","setTitle","userList","map","u","id","user","name","handleSave","alert","length","put","data","post","err","createElement","onClose","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","container","xs","style","item","label","placeholder","value","onChange","e","target","variant","size","fullWidth","onFiltered","initialUsers","onClick","color","Chat","props","classes","history","showDialog","setShowDialog","dialogType","setDialogType","currentChat","setCurrentChat","chats","setChats","chatsPageInfo","setChatsPageInfo","hasMore","messages","setMessages","messagesPageInfo","setMessagesPageInfo","messagesPage","setMessagesPage","loading","setLoading","tab","setTab","isMounted","scrollToBottomRef","socketManager","current","findChats","then","records","find","r","uuid","selectChat","findMessages","setTimeout","companyId","localStorage","getItem","socket","getSocket","on","action","prev","record","changedChats","filteredChats","filter","c","push","newMessage","chatId","disconnect","sendMessage","contentMessage","message","deleteChat","delete","get","loadMoreMessages","console","log","renderGrid","className","md","pageInfo","handleSelectChat","handleDeleteChat","handleEditChat","handleSendMessage","handleLoadMore","renderTab","indicatorColor","textColor","v","Fragment"],"sources":["/app/src/pages/Chat/index.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\n\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  makeStyles,\n  Paper,\n  Tab,\n  Tabs,\n  TextField,\n} from \"@material-ui/core\";\nimport ChatList from \"./ChatList\";\nimport ChatMessages from \"./ChatMessages\";\nimport { UsersFilter } from \"../../components/UsersFilter\";\nimport api from \"../../services/api\";\nimport { SocketContext } from \"../../context/Socket/SocketContext\";\n\nimport { has, isObject } from \"lodash\";\n\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    flex: 1,\n    padding: theme.spacing(2),\n    height: `calc(100% - 48px)`,\n    overflowY: \"hidden\",\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\n  },\n  gridContainer: {\n    flex: 1,\n    height: \"100%\",\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\n    backgroundColor: theme.palette.dark,\n  },\n  gridItem: {\n    height: \"100%\",\n  },\n  gridItemTab: {\n    height: \"92%\",\n    width: \"100%\",\n  },\n  btnContainer: {\n    textAlign: \"right\",\n    padding: 10,\n  },\n}));\n\nexport function ChatModal({\n  open,\n  chat,\n  type,\n  handleClose,\n  handleLoadNewChat,\n}) {\n  const [users, setUsers] = useState([]);\n  const [title, setTitle] = useState(\"\");\n\n  useEffect(() => {\n    setTitle(\"\");\n    setUsers([]);\n    if (type === \"edit\") {\n      const userList = chat.users.map((u) => ({\n        id: u.user.id,\n        name: u.user.name,\n      }));\n      setUsers(userList);\n      setTitle(chat.title);\n    }\n  }, [chat, open, type]);\n\n  const handleSave = async () => {\n    try {\n      if (!title) {\n        alert(\"Por favor, preencha o tÃ­tulo da conversa.\");\n        return;\n      }\n\n      if (!users || users.length === 0) {\n        alert(\"Por favor, selecione pelo menos um usuÃ¡rio.\");\n        return;\n      }\n\n      if (type === \"edit\") {\n        await api.put(`/chats/${chat.id}`, {\n          users,\n          title,\n        });\n      } else {\n        const { data } = await api.post(\"/chats\", {\n          users,\n          title,\n        });\n        handleLoadNewChat(data);\n      }\n      handleClose();\n    } catch (err) {}\n  };  \n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Conversa</DialogTitle>\n      <DialogContent>\n        <Grid spacing={2} container>\n          <Grid xs={12} style={{ padding: 18 }} item>\n            <TextField\n              label=\"TÃ­tulo\"\n              placeholder=\"TÃ­tulo\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </Grid>\n          <Grid xs={12} item>\n            <UsersFilter\n              onFiltered={(users) => setUsers(users)}\n              initialUsers={users}\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Fechar\n        </Button>\n        <Button onClick={handleSave} color=\"primary\" variant=\"contained\">\n          Salvar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction Chat(props) {\n  const classes = useStyles();\n  const { user } = useContext(AuthContext);\n  const history = useHistory();\n\n  const [showDialog, setShowDialog] = useState(false);\n  const [dialogType, setDialogType] = useState(\"new\");\n  const [currentChat, setCurrentChat] = useState({});\n  const [chats, setChats] = useState([]);\n  const [chatsPageInfo, setChatsPageInfo] = useState({ hasMore: false });\n  const [messages, setMessages] = useState([]);\n  const [messagesPageInfo, setMessagesPageInfo] = useState({ hasMore: false });\n  const [messagesPage, setMessagesPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useState(0);\n  const isMounted = useRef(true);\n  const scrollToBottomRef = useRef();\n  const { id } = useParams();\n\n  const socketManager = useContext(SocketContext);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isMounted.current) {\n      findChats().then((data) => {\n        const { records } = data;\n        if (records.length > 0) {\n          setChats(records);\n          setChatsPageInfo(data);\n\n          if (id && records.length) {\n            const chat = records.find((r) => r.uuid === id);\n            selectChat(chat);\n          }\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (isObject(currentChat) && has(currentChat, \"id\")) {\n      findMessages(currentChat.id).then(() => {\n        if (typeof scrollToBottomRef.current === \"function\") {\n          setTimeout(() => {\n            scrollToBottomRef.current();\n          }, 300);\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentChat]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketManager.getSocket(companyId);\n\n    socket.on(`company-${companyId}-chat-user-${user.id}`, (data) => {\n      if (data.action === \"create\") {\n        setChats((prev) => [data.record, ...prev]);\n      }\n      if (data.action === \"update\") {\n        const changedChats = chats.map((chat) => {\n          if (chat.id === data.record.id) {\n            setCurrentChat(data.record);\n            return {\n              ...data.record,\n            };\n          }\n          return chat;\n        });\n        setChats(changedChats);\n      }\n    });\n\n    socket.on(`company-${companyId}-chat`, (data) => {\n      if (data.action === \"delete\") {\n        const filteredChats = chats.filter((c) => c.id !== +data.id);\n        setChats(filteredChats);\n        setMessages([]);\n        setMessagesPage(1);\n        setMessagesPageInfo({ hasMore: false });\n        setCurrentChat({});\n        history.push(\"/chats\");\n      }\n    });\n\n    if (isObject(currentChat) && has(currentChat, \"id\")) {\n      socket.on(`company-${companyId}-chat-${currentChat.id}`, (data) => {\n        if (data.action === \"new-message\") {\n          setMessages((prev) => [...prev, data.newMessage]);\n          const changedChats = chats.map((chat) => {\n            if (chat.id === data.newMessage.chatId) {\n              return {\n                ...data.chat,\n              };\n            }\n            return chat;\n          });\n          setChats(changedChats);\n          scrollToBottomRef.current();\n        }\n\n        if (data.action === \"update\") {\n          const changedChats = chats.map((chat) => {\n            if (chat.id === data.chat.id) {\n              return {\n                ...data.chat,\n              };\n            }\n            return chat;\n          });\n          setChats(changedChats);\n          scrollToBottomRef.current();\n        }\n      });\n    }\n\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentChat, socketManager]);\n\n  const selectChat = (chat) => {\n    try {\n      setMessages([]);\n      setMessagesPage(1);\n      setCurrentChat(chat);\n      setTab(1);\n    } catch (err) {}\n  };\n\n  const sendMessage = async (contentMessage) => {\n    setLoading(true);\n    try {\n      await api.post(`/chats/${currentChat.id}/messages`, {\n        message: contentMessage,\n      });\n    } catch (err) {}\n    setLoading(false);\n  };\n\n  const deleteChat = async (chat) => {\n    try {\n      await api.delete(`/chats/${chat.id}`);\n    } catch (err) {}\n  };\n\n  const findMessages = async (chatId) => {\n    setLoading(true);\n    try {\n      const { data } = await api.get(\n        `/chats/${chatId}/messages?pageNumber=${messagesPage}`\n      );\n      setMessagesPage((prev) => prev + 1);\n      setMessagesPageInfo(data);\n      setMessages((prev) => [...data.records, ...prev]);\n    } catch (err) {}\n    setLoading(false);\n  };\n\n  const loadMoreMessages = async () => {\n    if (!loading) {\n      findMessages(currentChat.id);\n    }\n  };\n\n  const findChats = async () => {\n    try {\n      const { data } = await api.get(\"/chats\");\n      return data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const renderGrid = () => {\n    return (\n      <Grid className={classes.gridContainer} container>\n        <Grid className={classes.gridItem} md={3} item>\n          \n            <div className={classes.btnContainer}>\n              <Button\n                onClick={() => {\n                  setDialogType(\"new\");\n                  setShowDialog(true);\n                }}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Nova\n              </Button>\n            </div>\n          \n          <ChatList\n            chats={chats}\n            pageInfo={chatsPageInfo}\n            loading={loading}\n            handleSelectChat={(chat) => selectChat(chat)}\n            handleDeleteChat={(chat) => deleteChat(chat)}\n            handleEditChat={() => {\n              setDialogType(\"edit\");\n              setShowDialog(true);\n            }}\n          />\n        </Grid>\n        <Grid className={classes.gridItem} md={9} item>\n          {isObject(currentChat) && has(currentChat, \"id\") && (\n            <ChatMessages\n              chat={currentChat}\n              scrollToBottomRef={scrollToBottomRef}\n              pageInfo={messagesPageInfo}\n              messages={messages}\n              loading={loading}\n              handleSendMessage={sendMessage}\n              handleLoadMore={loadMoreMessages}\n            />\n          )}\n        </Grid>\n      </Grid>\n    );\n  };\n\n  const renderTab = () => {\n    return (\n      <Grid className={classes.gridContainer} container>\n        <Grid md={12} item>\n          <Tabs\n            value={tab}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={(e, v) => setTab(v)}\n            aria-label=\"disabled tabs example\"\n          >\n            <Tab label=\"Chats\" />\n            <Tab label=\"Mensagens\" />\n          </Tabs>\n        </Grid>\n        {tab === 0 && (\n          <Grid className={classes.gridItemTab} md={12} item>\n            <div className={classes.btnContainer}>\n              <Button\n                onClick={() => setShowDialog(true)}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Novo\n              </Button>\n            </div>\n            <ChatList\n              chats={chats}\n              pageInfo={chatsPageInfo}\n              loading={loading}\n              handleSelectChat={(chat) => selectChat(chat)}\n              handleDeleteChat={(chat) => deleteChat(chat)}\n            />\n          </Grid>\n        )}\n        {tab === 1 && (\n          <Grid className={classes.gridItemTab} md={12} item>\n            {isObject(currentChat) && has(currentChat, \"id\") && (\n              <ChatMessages\n                scrollToBottomRef={scrollToBottomRef}\n                pageInfo={messagesPageInfo}\n                messages={messages}\n                loading={loading}\n                handleSendMessage={sendMessage}\n                handleLoadMore={loadMoreMessages}\n              />\n            )}\n          </Grid>\n        )}\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <ChatModal\n        type={dialogType}\n        open={showDialog}\n        chat={currentChat}\n        handleLoadNewChat={(data) => {\n          setMessages([]);\n          setMessagesPage(1);\n          setCurrentChat(data);\n          setTab(1);\n          history.push(`/chats/${data.uuid}`);\n        }}\n        handleClose={() => setShowDialog(false)}\n      />\n      <Paper className={classes.mainContainer}>\n        {isWidthUp(\"md\", props.width) ? renderGrid() : renderTab()}\n      </Paper>\n    </>\n  );\n}\n\nexport default withWidth()(Chat);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}