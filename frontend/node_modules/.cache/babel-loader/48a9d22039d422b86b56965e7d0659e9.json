{"ast":null,"code":"import reduceReducers from 'reduce-reducers';\nimport invariant from 'invariant';\nimport isPlainObject from './utils/isPlainObject';\nimport isMap from './utils/isMap';\nimport ownKeys from './utils/ownKeys';\nimport flattenReducerMap from './utils/flattenReducerMap';\nimport handleAction from './handleAction';\nimport get from './utils/get';\nexport default function handleActions(handlers, defaultState, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  invariant(isPlainObject(handlers) || isMap(handlers), 'Expected handlers to be a plain object.');\n  var flattenedReducerMap = flattenReducerMap(handlers, options);\n  var reducers = ownKeys(flattenedReducerMap).map(function (type) {\n    return handleAction(type, get(type, flattenedReducerMap), defaultState);\n  });\n  var reducer = reduceReducers.apply(void 0, reducers.concat([defaultState]));\n  return function (state, action) {\n    if (state === void 0) {\n      state = defaultState;\n    }\n    return reducer(state, action);\n  };\n}","map":{"version":3,"names":["reduceReducers","invariant","isPlainObject","isMap","ownKeys","flattenReducerMap","handleAction","get","handleActions","handlers","defaultState","options","flattenedReducerMap","reducers","map","type","reducer","apply","concat","state","action"],"sources":["/app/node_modules/redux-actions/es/handleActions.js"],"sourcesContent":["import reduceReducers from 'reduce-reducers';\nimport invariant from 'invariant';\nimport isPlainObject from './utils/isPlainObject';\nimport isMap from './utils/isMap';\nimport ownKeys from './utils/ownKeys';\nimport flattenReducerMap from './utils/flattenReducerMap';\nimport handleAction from './handleAction';\nimport get from './utils/get';\nexport default function handleActions(handlers, defaultState, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  invariant(isPlainObject(handlers) || isMap(handlers), 'Expected handlers to be a plain object.');\n  var flattenedReducerMap = flattenReducerMap(handlers, options);\n  var reducers = ownKeys(flattenedReducerMap).map(function (type) {\n    return handleAction(type, get(type, flattenedReducerMap), defaultState);\n  });\n  var reducer = reduceReducers.apply(void 0, reducers.concat([defaultState]));\n  return function (state, action) {\n    if (state === void 0) {\n      state = defaultState;\n    }\n\n    return reducer(state, action);\n  };\n}"],"mappings":"AAAA,OAAOA,cAAc,MAAM,iBAAiB;AAC5C,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,GAAG,MAAM,aAAa;AAC7B,eAAe,SAASC,aAAaA,CAACC,QAAQ,EAAEC,YAAY,EAAEC,OAAO,EAAE;EACrE,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,CAAC,CAAC;EACd;EAEAV,SAAS,CAACC,aAAa,CAACO,QAAQ,CAAC,IAAIN,KAAK,CAACM,QAAQ,CAAC,EAAE,yCAAyC,CAAC;EAChG,IAAIG,mBAAmB,GAAGP,iBAAiB,CAACI,QAAQ,EAAEE,OAAO,CAAC;EAC9D,IAAIE,QAAQ,GAAGT,OAAO,CAACQ,mBAAmB,CAAC,CAACE,GAAG,CAAC,UAAUC,IAAI,EAAE;IAC9D,OAAOT,YAAY,CAACS,IAAI,EAAER,GAAG,CAACQ,IAAI,EAAEH,mBAAmB,CAAC,EAAEF,YAAY,CAAC;EACzE,CAAC,CAAC;EACF,IAAIM,OAAO,GAAGhB,cAAc,CAACiB,KAAK,CAAC,KAAK,CAAC,EAAEJ,QAAQ,CAACK,MAAM,CAAC,CAACR,YAAY,CAAC,CAAC,CAAC;EAC3E,OAAO,UAAUS,KAAK,EAAEC,MAAM,EAAE;IAC9B,IAAID,KAAK,KAAK,KAAK,CAAC,EAAE;MACpBA,KAAK,GAAGT,YAAY;IACtB;IAEA,OAAOM,OAAO,CAACG,KAAK,EAAEC,MAAM,CAAC;EAC/B,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module"}