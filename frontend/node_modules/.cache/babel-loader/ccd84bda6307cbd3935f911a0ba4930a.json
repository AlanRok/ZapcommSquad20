{"ast":null,"code":"import { createContext, useMemo, createElement, useContext } from 'react';\nimport { func, oneOfType, object, string, element, arrayOf } from 'prop-types';\nvar MuiPickersContext = createContext(null);\nvar MuiPickersUtilsProvider = function MuiPickersUtilsProvider(_ref) {\n  var Utils = _ref.utils,\n    children = _ref.children,\n    locale = _ref.locale,\n    libInstance = _ref.libInstance;\n  var utils = useMemo(function () {\n    return new Utils({\n      locale: locale,\n      instance: libInstance\n    });\n  }, [Utils, libInstance, locale]);\n  return createElement(MuiPickersContext.Provider, {\n    value: utils,\n    children: children\n  });\n};\nprocess.env.NODE_ENV !== \"production\" ? MuiPickersUtilsProvider.propTypes = {\n  utils: func.isRequired,\n  locale: oneOfType([object, string]),\n  children: oneOfType([element.isRequired, arrayOf(element.isRequired)]).isRequired\n} : void 0;\nvar checkUtils = function checkUtils(utils) {\n  if (!utils) {\n    // tslint:disable-next-line\n    throw new Error('Can not find utils in context. You either a) forgot to wrap your component tree in MuiPickersUtilsProvider; or b) mixed named and direct file imports.  Recommendation: use named imports from the module index.');\n  }\n};\nfunction useUtils() {\n  var utils = useContext(MuiPickersContext);\n  checkUtils(utils);\n  return utils;\n}\nexport { MuiPickersUtilsProvider as M, MuiPickersContext as a, useUtils as u };","map":{"version":3,"names":["MuiPickersContext","createContext","MuiPickersUtilsProvider","_ref","Utils","utils","children","locale","libInstance","useMemo","instance","createElement","Provider","value","process","env","NODE_ENV","propTypes","func","isRequired","oneOfType","object","string","element","arrayOf","checkUtils","Error","useUtils","useContext"],"sources":["../../src/MuiPickersUtilsProvider.tsx","../../src/_shared/hooks/useUtils.ts"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { IUtils } from '@date-io/core/IUtils';\nimport { MaterialUiPickersDate } from './typings/date';\n\nexport const MuiPickersContext = React.createContext<IUtils<MaterialUiPickersDate> | null>(null);\n\nexport interface MuiPickersUtilsProviderProps {\n  utils: any;\n  children: React.ReactNode;\n  locale?: any;\n  libInstance?: any;\n}\n\nexport const MuiPickersUtilsProvider: React.FC<MuiPickersUtilsProviderProps> = ({\n  utils: Utils,\n  children,\n  locale,\n  libInstance,\n}) => {\n  const utils = React.useMemo(() => new Utils({ locale, instance: libInstance }), [\n    Utils,\n    libInstance,\n    locale,\n  ]);\n\n  return <MuiPickersContext.Provider value={utils} children={children} />;\n};\n\nMuiPickersUtilsProvider.propTypes = {\n  utils: PropTypes.func.isRequired,\n  locale: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  children: PropTypes.oneOfType([\n    PropTypes.element.isRequired,\n    PropTypes.arrayOf(PropTypes.element.isRequired),\n  ]).isRequired,\n};\n\nexport default MuiPickersUtilsProvider;\n","import { useContext } from 'react';\nimport { IUtils } from '@date-io/core/IUtils';\nimport { MaterialUiPickersDate } from '../../typings/date';\nimport { MuiPickersContext } from '../../MuiPickersUtilsProvider';\n\nexport const checkUtils = (utils: IUtils<MaterialUiPickersDate> | null | undefined) => {\n  if (!utils) {\n    // tslint:disable-next-line\n    throw new Error(\n      'Can not find utils in context. You either a) forgot to wrap your component tree in MuiPickersUtilsProvider; or b) mixed named and direct file imports.  Recommendation: use named imports from the module index.'\n    );\n  }\n};\n\nexport function useUtils() {\n  const utils = useContext(MuiPickersContext);\n  checkUtils(utils);\n\n  return utils!;\n}\n"],"mappings":";;IAKaA,iBAAiB,GAAGC,aAAA,CAA0D,IAA1D,CAA1B;AASP,IAAaC,uBAA+D,GAAG,SAAlEA,uBAAkEA,CAAAC,IAAA,EAKzE;MAJGC,KAIH,GAAAD,IAAA,CAJJE,KAII;IAHJC,QAGI,GAAAH,IAAA,CAHJG,QAGI;IAFJC,MAEI,GAAAJ,IAAA,CAFJI,MAEI;IADJC,WACI,GAAAL,IAAA,CADJK,WACI;MACEH,KAAK,GAAGI,OAAA,CAAc;WAAM,IAAIL,KAAJ,CAAU;MAAEG,MAAM,EAANA,MAAF;MAAUG,QAAQ,EAAEF;KAA9B,CAAN;GAAd,EAAkE,CAC9EJ,KAD8E,EAE9EI,WAF8E,EAG9ED,MAH8E,CAAlE,CAAd;SAMOI,aAAA,CAACX,iBAAD,CAAmBY,QAAnB;IAA4BC,KAAK,EAAER,KAAnC;IAA0CC,QAAQ,EAAEA;IAA3D;CAZK;AAePQ,OAAA,CAAAC,GAAA,CAAAC,QAAA,oBAAAd,uBAAuB,CAACe,SAAxB,GAAoC;EAClCZ,KAAK,EAAEa,IAAA,CAAeC,UADY;EAElCZ,MAAM,EAAEa,SAAA,CAAoB,CAACC,MAAD,EAAmBC,MAAnB,CAApB,CAF0B;EAGlChB,QAAQ,EAAEc,SAAA,CAAoB,CAC5BG,OAAA,CAAkBJ,UADU,EAE5BK,OAAA,CAAkBD,OAAA,CAAkBJ,UAApC,CAF4B,CAApB,EAGPA;CANL;ACxBO,IAAMM,UAAU,GAAG,SAAbA,UAAaA,CAACpB,KAAD,EAA6D;MACjF,CAACA,KAAL,EAAY;;UAEJ,IAAIqB,KAAJ,CACJ,kNADI,CAAN;;CAHG;AASP,SAAgBC,QAATA,CAAA,EAAoB;MACnBtB,KAAK,GAAGuB,UAAU,CAAC5B,iBAAD,CAAxB;EACAyB,UAAU,CAACpB,KAAD,CAAV;SAEOA,KAAP","ignoreList":[]},"metadata":{},"sourceType":"module"}