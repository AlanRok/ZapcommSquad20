{"ast":null,"code":"var _jsxFileName = \"/app/src/components/NewTicketModal/index.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport ContactModal from \"../ContactModal\";\nimport toastError from \"../../errors/toastError\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { WhatsApp } from \"@material-ui/icons\";\nimport { Grid, ListItemText, MenuItem, Select } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { toast } from \"react-toastify\";\n//import ShowTicketOpen from \"../ShowTicketOpenModal\";\n\nconst useStyles = makeStyles(theme => ({\n  online: {\n    fontSize: 11,\n    color: \"#25d366\"\n  },\n  offline: {\n    fontSize: 11,\n    color: \"#e1306c\"\n  }\n}));\nconst filter = createFilterOptions({\n  trim: true\n});\nconst NewTicketModal = ({\n  modalOpen,\n  onClose,\n  initialContact\n}) => {\n  var _user$queues;\n  const classes = useStyles();\n  const [options, setOptions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [selectedQueue, setSelectedQueue] = useState(\"\");\n  const [selectedWhatsapp, setSelectedWhatsapp] = useState(\"\");\n  const [newContact, setNewContact] = useState({});\n  const [whatsapps, setWhatsapps] = useState([]);\n  const [contactModalOpen, setContactModalOpen] = useState(false);\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    companyId,\n    whatsappId\n  } = user;\n  const [openAlert, setOpenAlert] = useState(false);\n  const [userTicketOpen, setUserTicketOpen] = useState(\"\");\n  const [queueTicketOpen, setQueueTicketOpen] = useState(\"\");\n  useEffect(() => {\n    if ((initialContact === null || initialContact === void 0 ? void 0 : initialContact.id) !== undefined) {\n      setOptions([initialContact]);\n      setSelectedContact(initialContact);\n    }\n  }, [initialContact]);\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        api.get(`/whatsapp`, {\n          params: {\n            companyId,\n            session: 0\n          }\n        }).then(({\n          data\n        }) => setWhatsapps(data));\n      };\n      if (whatsappId !== null && whatsappId !== undefined) {\n        setSelectedWhatsapp(whatsappId);\n      }\n      if (user.queues.length === 1) {\n        setSelectedQueue(user.queues[0].id);\n      }\n      fetchContacts();\n      setLoading(false);\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, []);\n  useEffect(() => {\n    if (!modalOpen || searchParam.length < 3) {\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        try {\n          const {\n            data\n          } = await api.get(\"contacts\", {\n            params: {\n              searchParam\n            }\n          });\n          setOptions(data.contacts);\n          setLoading(false);\n        } catch (err) {\n          setLoading(false);\n          toastError(err);\n        }\n      };\n      fetchContacts();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, modalOpen]);\n\n  // const IconChannel = (channel) => {\n  //   switch (channel) {\n  //     case \"facebook\":\n  //       return <Facebook style={{ color: \"#3b5998\", verticalAlign: \"middle\" }} />;\n  //     case \"instagram\":\n  //       return <Instagram style={{ color: \"#e1306c\", verticalAlign: \"middle\" }} />;\n  //     case \"whatsapp\":\n  //       return <WhatsApp style={{ color: \"#25d366\", verticalAlign: \"middle\" }} />\n  //     default:\n  //       return \"error\";\n  //   }\n  // };\n\n  const handleClose = () => {\n    onClose();\n    setSearchParam(\"\");\n    setOpenAlert(false);\n    setUserTicketOpen(\"\");\n    setQueueTicketOpen(\"\");\n    setSelectedContact(null);\n  };\n  const handleCloseAlert = () => {\n    setOpenAlert(false);\n    setLoading(false);\n    setOpenAlert(false);\n    setUserTicketOpen(\"\");\n    setQueueTicketOpen(\"\");\n  };\n  const handleSaveTicket = async contactId => {\n    if (!contactId) return;\n    if (selectedQueue === \"\" && user.profile !== 'admin') {\n      toast.error(\"Selecione uma fila\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const queueId = selectedQueue !== \"\" ? selectedQueue : null;\n      const whatsappId = selectedWhatsapp !== \"\" ? selectedWhatsapp : null;\n      const {\n        data: ticket\n      } = await api.post(\"/tickets\", {\n        contactId: contactId,\n        queueId,\n        whatsappId,\n        userId: user.id,\n        status: \"open\"\n      });\n      onClose(ticket);\n    } catch (err) {\n      const ticket = JSON.parse(err.response.data.error);\n      if (ticket.userId !== (user === null || user === void 0 ? void 0 : user.id)) {\n        setOpenAlert(true);\n        setUserTicketOpen(ticket.user.name);\n        setQueueTicketOpen(ticket.queue.name);\n      } else {\n        setOpenAlert(false);\n        setUserTicketOpen(\"\");\n        setQueueTicketOpen(\"\");\n        setLoading(false);\n        onClose(ticket);\n      }\n    }\n    setLoading(false);\n  };\n  const handleSelectOption = (e, newValue) => {\n    if (newValue === null || newValue === void 0 ? void 0 : newValue.number) {\n      setSelectedContact(newValue);\n    } else if (newValue === null || newValue === void 0 ? void 0 : newValue.name) {\n      setNewContact({\n        name: newValue.name\n      });\n      setContactModalOpen(true);\n    }\n  };\n  const handleCloseContactModal = () => {\n    setContactModalOpen(false);\n  };\n  const handleAddNewContactTicket = contact => {\n    handleSaveTicket(contact.id);\n  };\n  const createAddContactOption = (filterOptions, params) => {\n    const filtered = filter(filterOptions, params);\n    if (params.inputValue !== \"\" && !loading && searchParam.length >= 3) {\n      filtered.push({\n        name: `${params.inputValue}`\n      });\n    }\n    return filtered;\n  };\n  const renderOption = option => {\n    if (option.number) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n        component: \"span\",\n        style: {\n          fontSize: 14,\n          marginLeft: \"10px\",\n          display: \"inline-flex\",\n          alignItems: \"center\",\n          lineHeight: \"2\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }\n      }, option.name, \" - \", option.number));\n    } else {\n      return `${i18n.t(\"newTicketModal.add\")} ${option.name}`;\n    }\n  };\n  const renderOptionLabel = option => {\n    if (option.number) {\n      return `${option.name} - ${option.number}`;\n    } else {\n      return `${option.name}`;\n    }\n  };\n  const renderContactAutocomplete = () => {\n    if (initialContact === undefined || initialContact.id === undefined) {\n      return /*#__PURE__*/React.createElement(Grid, {\n        xs: 12,\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Autocomplete, {\n        fullWidth: true,\n        options: options,\n        loading: loading,\n        clearOnBlur: true,\n        autoHighlight: true,\n        freeSolo: true,\n        clearOnEscape: true,\n        getOptionLabel: renderOptionLabel,\n        renderOption: renderOption,\n        filterOptions: createAddContactOption,\n        onChange: (e, newValue) => handleSelectOption(e, newValue),\n        renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n          label: i18n.t(\"newTicketModal.fieldLabel\"),\n          variant: \"outlined\",\n          autoFocus: true,\n          onChange: e => setSearchParam(e.target.value),\n          onKeyPress: e => {\n            if (loading || !selectedContact) return;else if (e.key === \"Enter\") {\n              handleSaveTicket(selectedContact.id);\n            }\n          },\n          InputProps: {\n            ...params.InputProps,\n            endAdornment: /*#__PURE__*/React.createElement(React.Fragment, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }\n            }, loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n              color: \"inherit\",\n              size: 20,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 25\n              }\n            }) : null, params.InputProps.endAdornment)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }\n      }));\n    }\n    return null;\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ContactModal, {\n    open: contactModalOpen,\n    initialValues: newContact,\n    onClose: handleCloseContactModal,\n    onSave: handleAddNewContactTicket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    open: modalOpen,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }\n  }, i18n.t(\"newTicketModal.title\")), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      width: 300\n    },\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }\n  }, renderContactAutocomplete(), /*#__PURE__*/React.createElement(Grid, {\n    xs: 12,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    required: true,\n    fullWidth: true,\n    displayEmpty: true,\n    variant: \"outlined\",\n    value: selectedQueue,\n    onChange: e => {\n      setSelectedQueue(e.target.value);\n    },\n    MenuProps: {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      getContentAnchorEl: null\n    },\n    renderValue: () => {\n      if (selectedQueue === \"\") {\n        return \"Selecione uma fila\";\n      }\n      const queue = user.queues.find(q => q.id === selectedQueue);\n      return queue.name;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }, ((_user$queues = user.queues) === null || _user$queues === void 0 ? void 0 : _user$queues.length) > 0 && user.queues.map((queue, key) => /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    key: key,\n    value: queue.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: queue.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 23\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    xs: 12,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    required: true,\n    fullWidth: true,\n    displayEmpty: true,\n    variant: \"outlined\",\n    value: selectedWhatsapp,\n    onChange: e => {\n      setSelectedWhatsapp(e.target.value);\n    },\n    MenuProps: {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      getContentAnchorEl: null\n    },\n    renderValue: () => {\n      if (selectedWhatsapp === \"\") {\n        return \"Selecione uma Conexão\";\n      }\n      const whatsapp = whatsapps.find(w => w.id === selectedWhatsapp);\n      return whatsapp.name;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 15\n    }\n  }, (whatsapps === null || whatsapps === void 0 ? void 0 : whatsapps.length) > 0 && whatsapps.map((whatsapp, key) => /*#__PURE__*/React.createElement(MenuItem, {\n    dense: true,\n    key: key,\n    value: whatsapp.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n      component: \"span\",\n      style: {\n        fontSize: 14,\n        marginLeft: \"10px\",\n        display: \"inline-flex\",\n        alignItems: \"center\",\n        lineHeight: \"2\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 29\n      }\n    }, whatsapp.name, \" \\xA0 \", /*#__PURE__*/React.createElement(\"p\", {\n      className: whatsapp.status === 'CONNECTED' ? classes.online : classes.offline,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 54\n      }\n    }, \"(\", whatsapp.status, \")\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 23\n    }\n  }))))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"secondary\",\n    disabled: loading,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 11\n    }\n  }, i18n.t(\"newTicketModal.buttons.cancel\")), /*#__PURE__*/React.createElement(ButtonWithSpinner, {\n    variant: \"contained\",\n    type: \"button\",\n    disabled: !selectedContact,\n    onClick: () => handleSaveTicket(selectedContact.id),\n    color: \"primary\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 11\n    }\n  }, i18n.t(\"newTicketModal.buttons.ok\")))));\n};\nexport default NewTicketModal;","map":{"version":3,"names":["React","useState","useEffect","useContext","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","Autocomplete","createFilterOptions","CircularProgress","i18n","api","ButtonWithSpinner","ContactModal","toastError","makeStyles","AuthContext","WhatsApp","Grid","ListItemText","MenuItem","Select","Typography","toast","useStyles","theme","online","fontSize","color","offline","filter","trim","NewTicketModal","modalOpen","onClose","initialContact","_user$queues","classes","options","setOptions","loading","setLoading","searchParam","setSearchParam","selectedContact","setSelectedContact","selectedQueue","setSelectedQueue","selectedWhatsapp","setSelectedWhatsapp","newContact","setNewContact","whatsapps","setWhatsapps","contactModalOpen","setContactModalOpen","user","companyId","whatsappId","openAlert","setOpenAlert","userTicketOpen","setUserTicketOpen","queueTicketOpen","setQueueTicketOpen","id","undefined","delayDebounceFn","setTimeout","fetchContacts","get","params","session","then","data","queues","length","clearTimeout","contacts","err","handleClose","handleCloseAlert","handleSaveTicket","contactId","profile","error","queueId","ticket","post","userId","status","JSON","parse","response","name","queue","handleSelectOption","e","newValue","number","handleCloseContactModal","handleAddNewContactTicket","contact","createAddContactOption","filterOptions","filtered","inputValue","push","renderOption","option","createElement","Fragment","component","style","marginLeft","display","alignItems","lineHeight","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","t","renderOptionLabel","renderContactAutocomplete","xs","item","fullWidth","clearOnBlur","autoHighlight","freeSolo","clearOnEscape","getOptionLabel","onChange","renderInput","Object","assign","label","variant","autoFocus","target","value","onKeyPress","key","InputProps","endAdornment","size","open","initialValues","onSave","dividers","width","container","spacing","required","displayEmpty","MenuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","renderValue","find","q","map","dense","primary","whatsapp","w","className","onClick","disabled","type"],"sources":["/app/src/components/NewTicketModal/index.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Autocomplete, {\n\tcreateFilterOptions,\n} from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport ContactModal from \"../ContactModal\";\nimport toastError from \"../../errors/toastError\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport {  WhatsApp } from \"@material-ui/icons\";\nimport { Grid, ListItemText, MenuItem, Select } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { toast } from \"react-toastify\";\n//import ShowTicketOpen from \"../ShowTicketOpenModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  online: {\n    fontSize: 11,\n    color: \"#25d366\"\n  },\n  offline: {\n    fontSize: 11,\n    color: \"#e1306c\"\n  }\n}));\n\nconst filter = createFilterOptions({\n  trim: true,\n});\n\nconst NewTicketModal = ({ modalOpen, onClose, initialContact }) => {\n  const classes = useStyles();\n  const [options, setOptions] = useState([]);\n\n  const [loading, setLoading] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [selectedQueue, setSelectedQueue] = useState(\"\");\n  const [selectedWhatsapp, setSelectedWhatsapp] = useState(\"\");\n  const [newContact, setNewContact] = useState({});\n  const [whatsapps, setWhatsapps] = useState([]);\n  const [contactModalOpen, setContactModalOpen] = useState(false);\n  const { user } = useContext(AuthContext);\n  const { companyId, whatsappId } = user;\n\n  const [ openAlert, setOpenAlert ] = useState(false);\n\tconst [ userTicketOpen, setUserTicketOpen] = useState(\"\");\n\tconst [ queueTicketOpen, setQueueTicketOpen] = useState(\"\");\n\n  useEffect(() => {\n    if (initialContact?.id !== undefined) {\n      setOptions([initialContact]);\n      setSelectedContact(initialContact);\n    }\n  }, [initialContact]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        api\n          .get(`/whatsapp`, { params: { companyId, session: 0 } })\n          .then(({ data }) => setWhatsapps(data));\n      };\n\n      if (whatsappId !== null && whatsappId!== undefined) {\n        setSelectedWhatsapp(whatsappId)\n      }\n\n      if (user.queues.length === 1) {\n        setSelectedQueue(user.queues[0].id)\n      }\n      fetchContacts();\n      setLoading(false);\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [])\n\n  useEffect(() => {\n    if (!modalOpen || searchParam.length < 3) {\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        try {\n          const { data } = await api.get(\"contacts\", {\n            params: { searchParam },\n          });\n          setOptions(data.contacts);\n          setLoading(false);\n        } catch (err) {\n          setLoading(false);\n          toastError(err);\n        }\n      };\n      fetchContacts();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, modalOpen]);\n\n  // const IconChannel = (channel) => {\n  //   switch (channel) {\n  //     case \"facebook\":\n  //       return <Facebook style={{ color: \"#3b5998\", verticalAlign: \"middle\" }} />;\n  //     case \"instagram\":\n  //       return <Instagram style={{ color: \"#e1306c\", verticalAlign: \"middle\" }} />;\n  //     case \"whatsapp\":\n  //       return <WhatsApp style={{ color: \"#25d366\", verticalAlign: \"middle\" }} />\n  //     default:\n  //       return \"error\";\n  //   }\n  // };\n\n  const handleClose = () => {\n    onClose();\n    setSearchParam(\"\");\n    setOpenAlert(false);\n    setUserTicketOpen(\"\");\n    setQueueTicketOpen(\"\");\n    setSelectedContact(null);\n  };\n\n  const handleCloseAlert = () => {\n    setOpenAlert(false);\n    setLoading(false);\n    setOpenAlert(false);\n    setUserTicketOpen(\"\");\n    setQueueTicketOpen(\"\");\n  };\n\n  const handleSaveTicket = async contactId => {\n    if (!contactId) return;\n    if (selectedQueue === \"\" && user.profile !== 'admin') {\n      toast.error(\"Selecione uma fila\");\n      return;\n    }\n    \n    setLoading(true);\n    try {\n      const queueId = selectedQueue !== \"\" ? selectedQueue : null;\n      const whatsappId = selectedWhatsapp !== \"\" ? selectedWhatsapp : null;\n      const { data: ticket } = await api.post(\"/tickets\", {\n        contactId: contactId,\n        queueId,\n        whatsappId,\n        userId: user.id,\n        status: \"open\",\n      });      \n\n      onClose(ticket);\n    } catch (err) {\n      \n      const ticket  = JSON.parse(err.response.data.error);\n\n      if (ticket.userId !== user?.id) {\n        setOpenAlert(true);\n        setUserTicketOpen(ticket.user.name);\n        setQueueTicketOpen(ticket.queue.name);\n      } else {\n        setOpenAlert(false);\n        setUserTicketOpen(\"\");\n        setQueueTicketOpen(\"\");\n        setLoading(false);\n        onClose(ticket);\n      }\n    }  \n    setLoading(false);\n  };\n\n  const handleSelectOption = (e, newValue) => {\n    if (newValue?.number) {\n      setSelectedContact(newValue);\n    } else if (newValue?.name) {\n      setNewContact({ name: newValue.name });\n      setContactModalOpen(true);\n    }\n  };\n\n  const handleCloseContactModal = () => {\n    setContactModalOpen(false);    \n  };\n\n  const handleAddNewContactTicket = contact => {\n    handleSaveTicket(contact.id);\n  };\n\n  const createAddContactOption = (filterOptions, params) => {\n    const filtered = filter(filterOptions, params);\n    if (params.inputValue !== \"\" && !loading && searchParam.length >= 3) {\n      filtered.push({\n        name: `${params.inputValue}`,\n      });\n    }\n    return filtered;\n  };\n\n  const renderOption = option => {\n    if (option.number) {\n      return <>\n        {/* {IconChannel(option.channel)} */}\n        <Typography component=\"span\" style={{ fontSize: 14, marginLeft: \"10px\", display: \"inline-flex\", alignItems: \"center\", lineHeight: \"2\" }}>\n          {option.name} - {option.number}\n        </Typography>\n      </>\n    } else {\n      return `${i18n.t(\"newTicketModal.add\")} ${option.name}`;\n    }\n  };\n\n  const renderOptionLabel = option => {\n    if (option.number) {\n      return `${option.name} - ${option.number}`;\n    } else {\n      return `${option.name}`;\n    }\n  };\n\n  const renderContactAutocomplete = () => {\n    if (initialContact === undefined || initialContact.id === undefined) {\n      return (\n        <Grid xs={12} item>\n          <Autocomplete\n            fullWidth\n            options={options}\n            loading={loading}\n            clearOnBlur\n            autoHighlight\n            freeSolo\n            clearOnEscape\n            getOptionLabel={renderOptionLabel}\n            renderOption={renderOption}\n            filterOptions={createAddContactOption}\n            onChange={(e, newValue) => handleSelectOption(e, newValue)}\n            renderInput={params => (\n              <TextField\n                {...params}\n                label={i18n.t(\"newTicketModal.fieldLabel\")}\n                variant=\"outlined\"\n                autoFocus\n                onChange={e => setSearchParam(e.target.value)}\n                onKeyPress={e => {\n                  if (loading || !selectedContact) return;\n                  else if (e.key === \"Enter\") {\n                    handleSaveTicket(selectedContact.id);\n                  }\n                }}\n                InputProps={{\n                  ...params.InputProps,\n                  endAdornment: (\n                    <React.Fragment>\n                      {loading ? (\n                        <CircularProgress color=\"inherit\" size={20} />\n                      ) : null}\n                      {params.InputProps.endAdornment}\n                    </React.Fragment>\n                  ),\n                }}\n              />\n            )}\n          />\n        </Grid>\n      )\n    }\n    return null;\n  }\n\n  return (\n    <>\n      <ContactModal\n        open={contactModalOpen}\n        initialValues={newContact}\n        onClose={handleCloseContactModal}\n        onSave={handleAddNewContactTicket}\n      ></ContactModal>\n      <Dialog open={modalOpen} onClose={handleClose}>\n        <DialogTitle id=\"form-dialog-title\">\n          {i18n.t(\"newTicketModal.title\")}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Grid style={{ width: 300 }} container spacing={2}>\n            {/* CONTATO */}\n            {renderContactAutocomplete()}\n            {/* FILA */}\n            <Grid xs={12} item>\n              <Select\n                required\n                fullWidth\n                displayEmpty\n                variant=\"outlined\"\n                value={selectedQueue}\n                onChange={(e) => {\n                  setSelectedQueue(e.target.value)\n                }}\n                MenuProps={{\n                  anchorOrigin: {\n                    vertical: \"bottom\",\n                    horizontal: \"left\",\n                  },\n                  transformOrigin: {\n                    vertical: \"top\",\n                    horizontal: \"left\",\n                  },\n                  getContentAnchorEl: null,\n                }}\n                renderValue={() => {\n                  if (selectedQueue === \"\") {\n                    return \"Selecione uma fila\"\n                  }\n                  const queue = user.queues.find(q => q.id === selectedQueue)\n                  return queue.name\n                }}\n              >\n                {user.queues?.length > 0 &&\n                  user.queues.map((queue, key) => (\n                    <MenuItem dense key={key} value={queue.id}>\n                      <ListItemText primary={queue.name} />\n                    </MenuItem>\n                  ))\n                }\n              </Select>\n            </Grid>\n            {/* CONEXAO */}\n            <Grid xs={12} item>\n              <Select\n                required\n                fullWidth\n                displayEmpty\n                variant=\"outlined\"\n                value={selectedWhatsapp}\n                onChange={(e) => {\n                  setSelectedWhatsapp(e.target.value)\n                }}\n                MenuProps={{\n                  anchorOrigin: {\n                    vertical: \"bottom\",\n                    horizontal: \"left\",\n                  },\n                  transformOrigin: {\n                    vertical: \"top\",\n                    horizontal: \"left\",\n                  },\n                  getContentAnchorEl: null,\n                }}\n                renderValue={() => {\n                  if (selectedWhatsapp === \"\") {\n                    return \"Selecione uma Conexão\"\n                  }\n                  const whatsapp = whatsapps.find(w => w.id === selectedWhatsapp)\n                  return whatsapp.name\n                }}\n              >\n                {whatsapps?.length > 0 &&\n                  whatsapps.map((whatsapp, key) => (\n                    <MenuItem dense key={key} value={whatsapp.id}>\n                      <ListItemText\n                        primary={\n                          <>\n                            {/* {IconChannel(whatsapp.channel)} */}\n                            <Typography component=\"span\" style={{ fontSize: 14, marginLeft: \"10px\", display: \"inline-flex\", alignItems: \"center\", lineHeight: \"2\" }}>\n                              {whatsapp.name} &nbsp; <p className={(whatsapp.status) === 'CONNECTED' ? classes.online : classes.offline} >({whatsapp.status})</p>\n                            </Typography>\n                          </>\n                        }\n                      />\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleClose}\n            color=\"secondary\"\n            disabled={loading}\n            variant=\"outlined\"\n          >\n            {i18n.t(\"newTicketModal.buttons.cancel\")}\n          </Button>\n          <ButtonWithSpinner\n            variant=\"contained\"\n            type=\"button\"\n            disabled={!selectedContact}\n            onClick={() => handleSaveTicket(selectedContact.id)}\n            color=\"primary\"\n            loading={loading}\n          >\n            {i18n.t(\"newTicketModal.buttons.ok\")}\n          </ButtonWithSpinner>\n        </DialogActions>\n        {/* <ShowTicketOpen\n          isOpen={openAlert}\n          handleClose={handleCloseAlert}\n          user={userTicketOpen}\n          queue={queueTicketOpen}\n\t\t\t  /> */}\n      </Dialog >\n    </>\n  );\n};\nexport default NewTicketModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}