{"ast":null,"code":"import { useState, useEffect, useReducer, useContext } from \"react\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\nimport { SocketContext } from \"../../context/Socket/SocketContext\";\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_WHATSAPPS\") {\n    const whatsApps = action.payload;\n    return [...whatsApps];\n  }\n  if (action.type === \"UPDATE_WHATSAPPS\") {\n    const whatsApp = action.payload;\n    const whatsAppIndex = state.findIndex(s => s.id === whatsApp.id);\n    if (whatsAppIndex !== -1) {\n      state[whatsAppIndex] = whatsApp;\n      return [...state];\n    } else {\n      return [whatsApp, ...state];\n    }\n  }\n  if (action.type === \"UPDATE_SESSION\") {\n    const whatsApp = action.payload;\n    const whatsAppIndex = state.findIndex(s => s.id === whatsApp.id);\n    if (whatsAppIndex !== -1) {\n      state[whatsAppIndex].status = whatsApp.status;\n      state[whatsAppIndex].updatedAt = whatsApp.updatedAt;\n      state[whatsAppIndex].qrcode = whatsApp.qrcode;\n      state[whatsAppIndex].retries = whatsApp.retries;\n      return [...state];\n    } else {\n      return [...state];\n    }\n  }\n  if (action.type === \"DELETE_WHATSAPPS\") {\n    const whatsAppId = action.payload;\n    const whatsAppIndex = state.findIndex(s => s.id === whatsAppId);\n    if (whatsAppIndex !== -1) {\n      state.splice(whatsAppIndex, 1);\n    }\n    return [...state];\n  }\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\nconst useWhatsApps = () => {\n  const [whatsApps, dispatch] = useReducer(reducer, []);\n  const [loading, setLoading] = useState(true);\n  const socketManager = useContext(SocketContext);\n  useEffect(() => {\n    setLoading(true);\n    const fetchSession = async () => {\n      try {\n        const {\n          data\n        } = await api.get(\"/whatsapp/?session=0\");\n        dispatch({\n          type: \"LOAD_WHATSAPPS\",\n          payload: data\n        });\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n        toastError(err);\n      }\n    };\n    fetchSession();\n  }, []);\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketManager.getSocket(companyId);\n    socket.on(`company-${companyId}-whatsapp`, data => {\n      if (data.action === \"update\") {\n        dispatch({\n          type: \"UPDATE_WHATSAPPS\",\n          payload: data.whatsapp\n        });\n      }\n    });\n    socket.on(`company-${companyId}-whatsapp`, data => {\n      if (data.action === \"delete\") {\n        dispatch({\n          type: \"DELETE_WHATSAPPS\",\n          payload: data.whatsappId\n        });\n      }\n    });\n    socket.on(`company-${companyId}-whatsappSession`, data => {\n      if (data.action === \"update\") {\n        dispatch({\n          type: \"UPDATE_SESSION\",\n          payload: data.session\n        });\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [socketManager]);\n  return {\n    whatsApps,\n    loading\n  };\n};\nexport default useWhatsApps;","map":{"version":3,"names":["useState","useEffect","useReducer","useContext","toastError","api","SocketContext","reducer","state","action","type","whatsApps","payload","whatsApp","whatsAppIndex","findIndex","s","id","status","updatedAt","qrcode","retries","whatsAppId","splice","useWhatsApps","dispatch","loading","setLoading","socketManager","fetchSession","data","get","err","companyId","localStorage","getItem","socket","getSocket","on","whatsapp","whatsappId","session","disconnect"],"sources":["/app/src/hooks/useWhatsApps/index.js"],"sourcesContent":["import { useState, useEffect, useReducer, useContext } from \"react\";\nimport toastError from \"../../errors/toastError\";\n\nimport api from \"../../services/api\";\nimport { SocketContext } from \"../../context/Socket/SocketContext\";\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_WHATSAPPS\") {\n    const whatsApps = action.payload;\n\n    return [...whatsApps];\n  }\n\n  if (action.type === \"UPDATE_WHATSAPPS\") {\n    const whatsApp = action.payload;\n    const whatsAppIndex = state.findIndex((s) => s.id === whatsApp.id);\n\n    if (whatsAppIndex !== -1) {\n      state[whatsAppIndex] = whatsApp;\n      return [...state];\n    } else {\n      return [whatsApp, ...state];\n    }\n  }\n\n  if (action.type === \"UPDATE_SESSION\") {\n    const whatsApp = action.payload;\n    const whatsAppIndex = state.findIndex((s) => s.id === whatsApp.id);\n\n    if (whatsAppIndex !== -1) {\n      state[whatsAppIndex].status = whatsApp.status;\n      state[whatsAppIndex].updatedAt = whatsApp.updatedAt;\n      state[whatsAppIndex].qrcode = whatsApp.qrcode;\n      state[whatsAppIndex].retries = whatsApp.retries;\n      return [...state];\n    } else {\n      return [...state];\n    }\n  }\n\n  if (action.type === \"DELETE_WHATSAPPS\") {\n    const whatsAppId = action.payload;\n\n    const whatsAppIndex = state.findIndex((s) => s.id === whatsAppId);\n    if (whatsAppIndex !== -1) {\n      state.splice(whatsAppIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useWhatsApps = () => {\n  const [whatsApps, dispatch] = useReducer(reducer, []);\n  const [loading, setLoading] = useState(true);\n\n  const socketManager = useContext(SocketContext);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchSession = async () => {\n      try {\n        const { data } = await api.get(\"/whatsapp/?session=0\");\n        dispatch({ type: \"LOAD_WHATSAPPS\", payload: data });\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n        toastError(err);\n      }\n    };\n    fetchSession();\n  }, []);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketManager.getSocket(companyId);\n\n    socket.on(`company-${companyId}-whatsapp`, (data) => {\n      if (data.action === \"update\") {\n        dispatch({ type: \"UPDATE_WHATSAPPS\", payload: data.whatsapp });\n      }\n    });\n\n    socket.on(`company-${companyId}-whatsapp`, (data) => {\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_WHATSAPPS\", payload: data.whatsappId });\n      }\n    });\n\n    socket.on(`company-${companyId}-whatsappSession`, (data) => {\n      if (data.action === \"update\") {\n        dispatch({ type: \"UPDATE_SESSION\", payload: data.session });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [socketManager]);\n\n  return { whatsApps, loading };\n};\n\nexport default useWhatsApps;\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AACnE,OAAOC,UAAU,MAAM,yBAAyB;AAEhD,OAAOC,GAAG,MAAM,oBAAoB;AACpC,SAASC,aAAa,QAAQ,oCAAoC;AAElE,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,IAAIA,MAAM,CAACC,IAAI,KAAK,gBAAgB,EAAE;IACpC,MAAMC,SAAS,GAAGF,MAAM,CAACG,OAAO;IAEhC,OAAO,CAAC,GAAGD,SAAS,CAAC;EACvB;EAEA,IAAIF,MAAM,CAACC,IAAI,KAAK,kBAAkB,EAAE;IACtC,MAAMG,QAAQ,GAAGJ,MAAM,CAACG,OAAO;IAC/B,MAAME,aAAa,GAAGN,KAAK,CAACO,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,QAAQ,CAACI,EAAE,CAAC;IAElE,IAAIH,aAAa,KAAK,CAAC,CAAC,EAAE;MACxBN,KAAK,CAACM,aAAa,CAAC,GAAGD,QAAQ;MAC/B,OAAO,CAAC,GAAGL,KAAK,CAAC;IACnB,CAAC,MAAM;MACL,OAAO,CAACK,QAAQ,EAAE,GAAGL,KAAK,CAAC;IAC7B;EACF;EAEA,IAAIC,MAAM,CAACC,IAAI,KAAK,gBAAgB,EAAE;IACpC,MAAMG,QAAQ,GAAGJ,MAAM,CAACG,OAAO;IAC/B,MAAME,aAAa,GAAGN,KAAK,CAACO,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,QAAQ,CAACI,EAAE,CAAC;IAElE,IAAIH,aAAa,KAAK,CAAC,CAAC,EAAE;MACxBN,KAAK,CAACM,aAAa,CAAC,CAACI,MAAM,GAAGL,QAAQ,CAACK,MAAM;MAC7CV,KAAK,CAACM,aAAa,CAAC,CAACK,SAAS,GAAGN,QAAQ,CAACM,SAAS;MACnDX,KAAK,CAACM,aAAa,CAAC,CAACM,MAAM,GAAGP,QAAQ,CAACO,MAAM;MAC7CZ,KAAK,CAACM,aAAa,CAAC,CAACO,OAAO,GAAGR,QAAQ,CAACQ,OAAO;MAC/C,OAAO,CAAC,GAAGb,KAAK,CAAC;IACnB,CAAC,MAAM;MACL,OAAO,CAAC,GAAGA,KAAK,CAAC;IACnB;EACF;EAEA,IAAIC,MAAM,CAACC,IAAI,KAAK,kBAAkB,EAAE;IACtC,MAAMY,UAAU,GAAGb,MAAM,CAACG,OAAO;IAEjC,MAAME,aAAa,GAAGN,KAAK,CAACO,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKK,UAAU,CAAC;IACjE,IAAIR,aAAa,KAAK,CAAC,CAAC,EAAE;MACxBN,KAAK,CAACe,MAAM,CAACT,aAAa,EAAE,CAAC,CAAC;IAChC;IACA,OAAO,CAAC,GAAGN,KAAK,CAAC;EACnB;EAEA,IAAIC,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;IAC3B,OAAO,EAAE;EACX;AACF,CAAC;AAED,MAAMc,YAAY,GAAGA,CAAA,KAAM;EACzB,MAAM,CAACb,SAAS,EAAEc,QAAQ,CAAC,GAAGvB,UAAU,CAACK,OAAO,EAAE,EAAE,CAAC;EACrD,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAM4B,aAAa,GAAGzB,UAAU,CAACG,aAAa,CAAC;EAE/CL,SAAS,CAAC,MAAM;IACd0B,UAAU,CAAC,IAAI,CAAC;IAChB,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMzB,GAAG,CAAC0B,GAAG,CAAC,sBAAsB,CAAC;QACtDN,QAAQ,CAAC;UAAEf,IAAI,EAAE,gBAAgB;UAAEE,OAAO,EAAEkB;QAAK,CAAC,CAAC;QACnDH,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOK,GAAG,EAAE;QACZL,UAAU,CAAC,KAAK,CAAC;QACjBvB,UAAU,CAAC4B,GAAG,CAAC;MACjB;IACF,CAAC;IACDH,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN5B,SAAS,CAAC,MAAM;IACd,MAAMgC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnD,MAAMC,MAAM,GAAGR,aAAa,CAACS,SAAS,CAACJ,SAAS,CAAC;IAEjDG,MAAM,CAACE,EAAE,CAAE,WAAUL,SAAU,WAAU,EAAGH,IAAI,IAAK;MACnD,IAAIA,IAAI,CAACrB,MAAM,KAAK,QAAQ,EAAE;QAC5BgB,QAAQ,CAAC;UAAEf,IAAI,EAAE,kBAAkB;UAAEE,OAAO,EAAEkB,IAAI,CAACS;QAAS,CAAC,CAAC;MAChE;IACF,CAAC,CAAC;IAEFH,MAAM,CAACE,EAAE,CAAE,WAAUL,SAAU,WAAU,EAAGH,IAAI,IAAK;MACnD,IAAIA,IAAI,CAACrB,MAAM,KAAK,QAAQ,EAAE;QAC5BgB,QAAQ,CAAC;UAAEf,IAAI,EAAE,kBAAkB;UAAEE,OAAO,EAAEkB,IAAI,CAACU;QAAW,CAAC,CAAC;MAClE;IACF,CAAC,CAAC;IAEFJ,MAAM,CAACE,EAAE,CAAE,WAAUL,SAAU,kBAAiB,EAAGH,IAAI,IAAK;MAC1D,IAAIA,IAAI,CAACrB,MAAM,KAAK,QAAQ,EAAE;QAC5BgB,QAAQ,CAAC;UAAEf,IAAI,EAAE,gBAAgB;UAAEE,OAAO,EAAEkB,IAAI,CAACW;QAAQ,CAAC,CAAC;MAC7D;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXL,MAAM,CAACM,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,CAACd,aAAa,CAAC,CAAC;EAEnB,OAAO;IAAEjB,SAAS;IAAEe;EAAQ,CAAC;AAC/B,CAAC;AAED,eAAeF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}