{"ast":null,"code":"var _jsxFileName = \"/app/src/pages/Dashboard/ChartsDate.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport brLocale from 'date-fns/locale/pt-BR';\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers';\nimport { Button, Stack, TextField } from '@mui/material';\nimport Typography from \"@material-ui/core/Typography\";\nimport api from '../../services/api';\nimport { format } from 'date-fns';\nimport { toast } from 'react-toastify';\nimport './button.css';\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top',\n      display: false\n    },\n    title: {\n      display: true,\n      position: 'left'\n    },\n    datalabels: {\n      display: true,\n      anchor: 'start',\n      offset: -30,\n      align: \"start\",\n      color: \"#fff\",\n      textStrokeColor: \"#000\",\n      textStrokeWidth: 2,\n      font: {\n        size: 20,\n        weight: \"bold\"\n      }\n    }\n  }\n};\nexport const ChartsDate = () => {\n  const [initialDate, setInitialDate] = useState(new Date());\n  const [finalDate, setFinalDate] = useState(new Date());\n  const [ticketsData, setTicketsData] = useState({\n    data: [],\n    count: 0\n  });\n  const companyId = localStorage.getItem(\"companyId\");\n  useEffect(() => {\n    handleGetTicketsInformation();\n  }, []);\n  const dataCharts = {\n    labels: ticketsData && (ticketsData === null || ticketsData === void 0 ? void 0 : ticketsData.data.length) > 0 && (ticketsData === null || ticketsData === void 0 ? void 0 : ticketsData.data.map(item => item.hasOwnProperty('horario') ? `Das ${item.horario}:00 as ${item.horario}:59` : item.data)),\n    datasets: [{\n      // label: 'Dataset 1',\n      data: (ticketsData === null || ticketsData === void 0 ? void 0 : ticketsData.data.length) > 0 && (ticketsData === null || ticketsData === void 0 ? void 0 : ticketsData.data.map((item, index) => {\n        return item.total;\n      })),\n      backgroundColor: '#2DDD7F'\n    }]\n  };\n  const handleGetTicketsInformation = async () => {\n    try {\n      const {\n        data\n      } = await api.get(`/dashboard/ticketsDay?initialDate=${format(initialDate, 'yyyy-MM-dd')}&finalDate=${format(finalDate, 'yyyy-MM-dd')}&companyId=${companyId}`);\n      setTicketsData(data);\n    } catch (error) {\n      toast.error('Erro ao buscar informações dos tickets');\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\",\n    color: \"primary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Total (\", ticketsData === null || ticketsData === void 0 ? void 0 : ticketsData.count, \")\"), /*#__PURE__*/React.createElement(Stack, {\n    direction: 'row',\n    spacing: 2,\n    alignItems: 'center',\n    sx: {\n      my: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    adapterLocale: brLocale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    value: initialDate,\n    onChange: newValue => {\n      setInitialDate(newValue);\n    },\n    label: \"Inicio\",\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({\n      fullWidth: true\n    }, params, {\n      sx: {\n        width: '20ch'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 50\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    adapterLocale: brLocale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    value: finalDate,\n    onChange: newValue => {\n      setFinalDate(newValue);\n    },\n    label: \"Fim\",\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({\n      fullWidth: true\n    }, params, {\n      sx: {\n        width: '20ch'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 50\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"buttonHover\",\n    onClick: handleGetTicketsInformation,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Filtrar\")), /*#__PURE__*/React.createElement(Bar, {\n    options: options,\n    data: dataCharts,\n    style: {\n      maxWidth: '100%',\n      maxHeight: '280px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"names":["React","useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","AdapterDateFns","brLocale","DatePicker","LocalizationProvider","Button","Stack","TextField","Typography","api","format","toast","register","options","responsive","plugins","legend","position","display","title","datalabels","anchor","offset","align","color","textStrokeColor","textStrokeWidth","font","size","weight","ChartsDate","initialDate","setInitialDate","Date","finalDate","setFinalDate","ticketsData","setTicketsData","data","count","companyId","localStorage","getItem","handleGetTicketsInformation","dataCharts","labels","length","map","item","hasOwnProperty","horario","datasets","index","total","backgroundColor","get","error","createElement","Fragment","component","variant","gutterBottom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","direction","spacing","alignItems","sx","my","dateAdapter","adapterLocale","value","onChange","newValue","label","renderInput","params","Object","assign","fullWidth","width","className","onClick","style","maxWidth","maxHeight"],"sources":["/app/src/pages/Dashboard/ChartsDate.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport brLocale from 'date-fns/locale/pt-BR';\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers';\nimport { Button, Stack, TextField } from '@mui/material';\nimport Typography from \"@material-ui/core/Typography\";\nimport api from '../../services/api';\nimport { format } from 'date-fns';\nimport { toast } from 'react-toastify';\nimport './button.css';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nexport const options = {\n    responsive: true,\n    plugins: {\n        legend: {\n            position: 'top',\n            display: false,\n        },\n        title: {\n            display: true,\n            position: 'left',\n        },\n        datalabels: {\n            display: true,\n            anchor: 'start',\n            offset: -30,\n            align: \"start\",\n            color: \"#fff\",\n            textStrokeColor: \"#000\",\n            textStrokeWidth: 2,\n            font: {\n                size: 20,\n                weight: \"bold\"\n\n            },\n        }\n    },\n};\n\nexport const ChartsDate = () => {\n\n    const [initialDate, setInitialDate] = useState(new Date());\n    const [finalDate, setFinalDate] = useState(new Date());\n    const [ticketsData, setTicketsData] = useState({ data: [], count: 0 });\n\n    const companyId = localStorage.getItem(\"companyId\");\n\n    useEffect(() => {\n        handleGetTicketsInformation();\n    }, []);\n\n    const dataCharts = {\n\n        labels: ticketsData && ticketsData?.data.length > 0 && ticketsData?.data.map((item) => (item.hasOwnProperty('horario') ? `Das ${item.horario}:00 as ${item.horario}:59` : item.data)),\n        datasets: [\n            {\n                // label: 'Dataset 1',\n                data: ticketsData?.data.length > 0 && ticketsData?.data.map((item, index) => {\n                    return item.total\n                }),\n                backgroundColor: '#2DDD7F',\n            },\n        ],\n    };\n\n    const handleGetTicketsInformation = async () => {\n        try {\n            const { data } = await api.get(`/dashboard/ticketsDay?initialDate=${format(initialDate, 'yyyy-MM-dd')}&finalDate=${format(finalDate, 'yyyy-MM-dd')}&companyId=${companyId}`);\n            setTicketsData(data);\n        } catch (error) {\n            toast.error('Erro ao buscar informações dos tickets');\n        }\n    }\n\n    return (\n        <>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                Total ({ticketsData?.count})\n            </Typography>\n\n            <Stack direction={'row'} spacing={2} alignItems={'center'} sx={{ my: 2, }} >\n\n                <LocalizationProvider dateAdapter={AdapterDateFns} adapterLocale={brLocale}>\n                    <DatePicker\n                        value={initialDate}\n                        onChange={(newValue) => { setInitialDate(newValue) }}\n                        label=\"Inicio\"\n                        renderInput={(params) => <TextField fullWidth {...params} sx={{ width: '20ch' }} />}\n\n                    />\n                </LocalizationProvider>\n\n                <LocalizationProvider dateAdapter={AdapterDateFns} adapterLocale={brLocale}>\n                    <DatePicker\n                        value={finalDate}\n                        onChange={(newValue) => { setFinalDate(newValue) }}\n                        label=\"Fim\"\n                        renderInput={(params) => <TextField fullWidth {...params} sx={{ width: '20ch' }} />}\n                    />\n                </LocalizationProvider>\n\n                <Button className=\"buttonHover\" onClick={handleGetTicketsInformation} variant='contained' >Filtrar</Button>\n\n            </Stack>\n            <Bar options={options} data={dataCharts} style={{ maxWidth: '100%', maxHeight: '280px', }} />\n        </>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}