{"ast":null,"code":"const SemVer = require('../classes/semver');\nconst Range = require('../classes/range');\nconst maxSatisfying = (versions, range, options) => {\n  let max = null;\n  let maxSV = null;\n  let rangeObj = null;\n  try {\n    rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(v => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, options);\n      }\n    }\n  });\n  return max;\n};\nmodule.exports = maxSatisfying;","map":{"version":3,"names":["SemVer","require","Range","maxSatisfying","versions","range","options","max","maxSV","rangeObj","er","forEach","v","test","compare","module","exports"],"sources":["/app/node_modules/jsonwebtoken/node_modules/semver/ranges/max-satisfying.js"],"sourcesContent":["const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAC3C,MAAMC,KAAK,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAEzC,MAAME,aAAa,GAAGA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,OAAO,KAAK;EAClD,IAAIC,GAAG,GAAG,IAAI;EACd,IAAIC,KAAK,GAAG,IAAI;EAChB,IAAIC,QAAQ,GAAG,IAAI;EACnB,IAAI;IACFA,QAAQ,GAAG,IAAIP,KAAK,CAACG,KAAK,EAAEC,OAAO,CAAC;EACtC,CAAC,CAAC,OAAOI,EAAE,EAAE;IACX,OAAO,IAAI;EACb;EACAN,QAAQ,CAACO,OAAO,CAAEC,CAAC,IAAK;IACtB,IAAIH,QAAQ,CAACI,IAAI,CAACD,CAAC,CAAC,EAAE;MACpB;MACA,IAAI,CAACL,GAAG,IAAIC,KAAK,CAACM,OAAO,CAACF,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;QACnC;QACAL,GAAG,GAAGK,CAAC;QACPJ,KAAK,GAAG,IAAIR,MAAM,CAACO,GAAG,EAAED,OAAO,CAAC;MAClC;IACF;EACF,CAAC,CAAC;EACF,OAAOC,GAAG;AACZ,CAAC;AACDQ,MAAM,CAACC,OAAO,GAAGb,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script"}