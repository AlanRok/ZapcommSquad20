{"ast":null,"code":"'use strict';\n\n// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer;\nvar createHmac = require('create-hmac');\nvar crt = require('browserify-rsa');\nvar EC = require('elliptic').ec;\nvar BN = require('bn.js');\nvar parseKeys = require('parse-asn1');\nvar curves = require('./curves.json');\nvar RSA_PKCS1_PADDING = 1;\nfunction sign(hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key);\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') {\n      throw new Error('wrong private key type');\n    }\n    return ecSign(hash, priv);\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') {\n      throw new Error('wrong private key type');\n    }\n    return dsaSign(hash, priv, hashType);\n  }\n  if (signType !== 'rsa' && signType !== 'ecdsa/rsa') {\n    throw new Error('wrong private key type');\n  }\n  if (key.padding !== undefined && key.padding !== RSA_PKCS1_PADDING) {\n    throw new Error('illegal or unsupported padding mode');\n  }\n  hash = Buffer.concat([tag, hash]);\n  var len = priv.modulus.byteLength();\n  var pad = [0, 1];\n  while (hash.length + pad.length + 1 < len) {\n    pad.push(0xff);\n  }\n  pad.push(0x00);\n  var i = -1;\n  while (++i < hash.length) {\n    pad.push(hash[i]);\n  }\n  var out = crt(pad, priv);\n  return out;\n}\nfunction ecSign(hash, priv) {\n  var curveId = curves[priv.curve.join('.')];\n  if (!curveId) {\n    throw new Error('unknown curve ' + priv.curve.join('.'));\n  }\n  var curve = new EC(curveId);\n  var key = curve.keyFromPrivate(priv.privateKey);\n  var out = key.sign(hash);\n  return Buffer.from(out.toDER());\n}\nfunction dsaSign(hash, priv, algo) {\n  var x = priv.params.priv_key;\n  var p = priv.params.p;\n  var q = priv.params.q;\n  var g = priv.params.g;\n  var r = new BN(0);\n  var k;\n  var H = bits2int(hash, q).mod(q);\n  var s = false;\n  var kv = getKey(x, q, hash, algo);\n  while (s === false) {\n    k = makeKey(q, kv, algo);\n    r = makeR(g, k, p, q);\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q);\n    if (s.cmpn(0) === 0) {\n      s = false;\n      r = new BN(0);\n    }\n  }\n  return toDER(r, s);\n}\nfunction toDER(r, s) {\n  r = r.toArray();\n  s = s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80) {\n    r = [0].concat(r);\n  }\n  if (s[0] & 0x80) {\n    s = [0].concat(s);\n  }\n  var total = r.length + s.length + 4;\n  var res = [0x30, total, 0x02, r.length];\n  res = res.concat(r, [0x02, s.length], s);\n  return Buffer.from(res);\n}\nfunction getKey(x, q, hash, algo) {\n  x = Buffer.from(x.toArray());\n  if (x.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - x.length);\n    x = Buffer.concat([zeros, x]);\n  }\n  var hlen = hash.length;\n  var hbits = bits2octets(hash, q);\n  var v = Buffer.alloc(hlen);\n  v.fill(1);\n  var k = Buffer.alloc(hlen);\n  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  return {\n    k: k,\n    v: v\n  };\n}\nfunction bits2int(obits, q) {\n  var bits = new BN(obits);\n  var shift = (obits.length << 3) - q.bitLength();\n  if (shift > 0) {\n    bits.ishrn(shift);\n  }\n  return bits;\n}\nfunction bits2octets(bits, q) {\n  bits = bits2int(bits, q);\n  bits = bits.mod(q);\n  var out = Buffer.from(bits.toArray());\n  if (out.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - out.length);\n    out = Buffer.concat([zeros, out]);\n  }\n  return out;\n}\nfunction makeKey(q, kv, algo) {\n  var t;\n  var k;\n  do {\n    t = Buffer.alloc(0);\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n      t = Buffer.concat([t, kv.v]);\n    }\n    k = bits2int(t, q);\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest();\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n  } while (k.cmp(q) !== -1);\n  return k;\n}\nfunction makeR(g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q);\n}\nmodule.exports = sign;\nmodule.exports.getKey = getKey;\nmodule.exports.makeKey = makeKey;","map":{"version":3,"names":["Buffer","require","createHmac","crt","EC","ec","BN","parseKeys","curves","RSA_PKCS1_PADDING","sign","hash","key","hashType","signType","tag","priv","curve","Error","ecSign","type","dsaSign","padding","undefined","concat","len","modulus","byteLength","pad","length","push","i","out","curveId","join","keyFromPrivate","privateKey","from","toDER","algo","x","params","priv_key","p","q","g","r","k","H","bits2int","mod","s","kv","getKey","makeKey","makeR","invm","imul","add","mul","cmpn","toArray","total","res","zeros","alloc","hlen","hbits","bits2octets","v","fill","update","digest","obits","bits","shift","bitLength","ishrn","t","cmp","toRed","mont","redPow","fromRed","module","exports"],"sources":["/app/node_modules/browserify-sign/browser/sign.js"],"sourcesContent":["'use strict';\n\n// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer;\nvar createHmac = require('create-hmac');\nvar crt = require('browserify-rsa');\nvar EC = require('elliptic').ec;\nvar BN = require('bn.js');\nvar parseKeys = require('parse-asn1');\nvar curves = require('./curves.json');\n\nvar RSA_PKCS1_PADDING = 1;\n\nfunction sign(hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key);\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong private key type'); }\n    return ecSign(hash, priv);\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') { throw new Error('wrong private key type'); }\n    return dsaSign(hash, priv, hashType);\n  }\n  if (signType !== 'rsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong private key type'); }\n  if (key.padding !== undefined && key.padding !== RSA_PKCS1_PADDING) { throw new Error('illegal or unsupported padding mode'); }\n\n  hash = Buffer.concat([tag, hash]);\n  var len = priv.modulus.byteLength();\n  var pad = [0, 1];\n  while (hash.length + pad.length + 1 < len) { pad.push(0xff); }\n  pad.push(0x00);\n  var i = -1;\n  while (++i < hash.length) { pad.push(hash[i]); }\n\n  var out = crt(pad, priv);\n  return out;\n}\n\nfunction ecSign(hash, priv) {\n  var curveId = curves[priv.curve.join('.')];\n  if (!curveId) { throw new Error('unknown curve ' + priv.curve.join('.')); }\n\n  var curve = new EC(curveId);\n  var key = curve.keyFromPrivate(priv.privateKey);\n  var out = key.sign(hash);\n\n  return Buffer.from(out.toDER());\n}\n\nfunction dsaSign(hash, priv, algo) {\n  var x = priv.params.priv_key;\n  var p = priv.params.p;\n  var q = priv.params.q;\n  var g = priv.params.g;\n  var r = new BN(0);\n  var k;\n  var H = bits2int(hash, q).mod(q);\n  var s = false;\n  var kv = getKey(x, q, hash, algo);\n  while (s === false) {\n    k = makeKey(q, kv, algo);\n    r = makeR(g, k, p, q);\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q);\n    if (s.cmpn(0) === 0) {\n      s = false;\n      r = new BN(0);\n    }\n  }\n  return toDER(r, s);\n}\n\nfunction toDER(r, s) {\n  r = r.toArray();\n  s = s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80) { r = [0].concat(r); }\n  if (s[0] & 0x80) { s = [0].concat(s); }\n\n  var total = r.length + s.length + 4;\n  var res = [\n    0x30, total, 0x02, r.length\n  ];\n  res = res.concat(r, [0x02, s.length], s);\n  return Buffer.from(res);\n}\n\nfunction getKey(x, q, hash, algo) {\n  x = Buffer.from(x.toArray());\n  if (x.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - x.length);\n    x = Buffer.concat([zeros, x]);\n  }\n  var hlen = hash.length;\n  var hbits = bits2octets(hash, q);\n  var v = Buffer.alloc(hlen);\n  v.fill(1);\n  var k = Buffer.alloc(hlen);\n  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  return { k: k, v: v };\n}\n\nfunction bits2int(obits, q) {\n  var bits = new BN(obits);\n  var shift = (obits.length << 3) - q.bitLength();\n  if (shift > 0) { bits.ishrn(shift); }\n  return bits;\n}\n\nfunction bits2octets(bits, q) {\n  bits = bits2int(bits, q);\n  bits = bits.mod(q);\n  var out = Buffer.from(bits.toArray());\n  if (out.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - out.length);\n    out = Buffer.concat([zeros, out]);\n  }\n  return out;\n}\n\nfunction makeKey(q, kv, algo) {\n  var t;\n  var k;\n\n  do {\n    t = Buffer.alloc(0);\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n      t = Buffer.concat([t, kv.v]);\n    }\n\n    k = bits2int(t, q);\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest();\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n  } while (k.cmp(q) !== -1);\n\n  return k;\n}\n\nfunction makeR(g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q);\n}\n\nmodule.exports = sign;\nmodule.exports.getKey = getKey;\nmodule.exports.makeKey = makeKey;\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC,CAACD,MAAM;AAC1C,IAAIE,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AACvC,IAAIE,GAAG,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AACnC,IAAIG,EAAE,GAAGH,OAAO,CAAC,UAAU,CAAC,CAACI,EAAE;AAC/B,IAAIC,EAAE,GAAGL,OAAO,CAAC,OAAO,CAAC;AACzB,IAAIM,SAAS,GAAGN,OAAO,CAAC,YAAY,CAAC;AACrC,IAAIO,MAAM,GAAGP,OAAO,CAAC,eAAe,CAAC;AAErC,IAAIQ,iBAAiB,GAAG,CAAC;AAEzB,SAASC,IAAIA,CAACC,IAAI,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,GAAG,EAAE;EAChD,IAAIC,IAAI,GAAGT,SAAS,CAACK,GAAG,CAAC;EACzB,IAAII,IAAI,CAACC,KAAK,EAAE;IACd;IACA,IAAIH,QAAQ,KAAK,OAAO,IAAIA,QAAQ,KAAK,WAAW,EAAE;MAAE,MAAM,IAAII,KAAK,CAAC,wBAAwB,CAAC;IAAE;IACnG,OAAOC,MAAM,CAACR,IAAI,EAAEK,IAAI,CAAC;EAC3B,CAAC,MAAM,IAAIA,IAAI,CAACI,IAAI,KAAK,KAAK,EAAE;IAC9B,IAAIN,QAAQ,KAAK,KAAK,EAAE;MAAE,MAAM,IAAII,KAAK,CAAC,wBAAwB,CAAC;IAAE;IACrE,OAAOG,OAAO,CAACV,IAAI,EAAEK,IAAI,EAAEH,QAAQ,CAAC;EACtC;EACA,IAAIC,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,WAAW,EAAE;IAAE,MAAM,IAAII,KAAK,CAAC,wBAAwB,CAAC;EAAE;EACjG,IAAIN,GAAG,CAACU,OAAO,KAAKC,SAAS,IAAIX,GAAG,CAACU,OAAO,KAAKb,iBAAiB,EAAE;IAAE,MAAM,IAAIS,KAAK,CAAC,qCAAqC,CAAC;EAAE;EAE9HP,IAAI,GAAGX,MAAM,CAACwB,MAAM,CAAC,CAACT,GAAG,EAAEJ,IAAI,CAAC,CAAC;EACjC,IAAIc,GAAG,GAAGT,IAAI,CAACU,OAAO,CAACC,UAAU,CAAC,CAAC;EACnC,IAAIC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAChB,OAAOjB,IAAI,CAACkB,MAAM,GAAGD,GAAG,CAACC,MAAM,GAAG,CAAC,GAAGJ,GAAG,EAAE;IAAEG,GAAG,CAACE,IAAI,CAAC,IAAI,CAAC;EAAE;EAC7DF,GAAG,CAACE,IAAI,CAAC,IAAI,CAAC;EACd,IAAIC,CAAC,GAAG,CAAC,CAAC;EACV,OAAO,EAAEA,CAAC,GAAGpB,IAAI,CAACkB,MAAM,EAAE;IAAED,GAAG,CAACE,IAAI,CAACnB,IAAI,CAACoB,CAAC,CAAC,CAAC;EAAE;EAE/C,IAAIC,GAAG,GAAG7B,GAAG,CAACyB,GAAG,EAAEZ,IAAI,CAAC;EACxB,OAAOgB,GAAG;AACZ;AAEA,SAASb,MAAMA,CAACR,IAAI,EAAEK,IAAI,EAAE;EAC1B,IAAIiB,OAAO,GAAGzB,MAAM,CAACQ,IAAI,CAACC,KAAK,CAACiB,IAAI,CAAC,GAAG,CAAC,CAAC;EAC1C,IAAI,CAACD,OAAO,EAAE;IAAE,MAAM,IAAIf,KAAK,CAAC,gBAAgB,GAAGF,IAAI,CAACC,KAAK,CAACiB,IAAI,CAAC,GAAG,CAAC,CAAC;EAAE;EAE1E,IAAIjB,KAAK,GAAG,IAAIb,EAAE,CAAC6B,OAAO,CAAC;EAC3B,IAAIrB,GAAG,GAAGK,KAAK,CAACkB,cAAc,CAACnB,IAAI,CAACoB,UAAU,CAAC;EAC/C,IAAIJ,GAAG,GAAGpB,GAAG,CAACF,IAAI,CAACC,IAAI,CAAC;EAExB,OAAOX,MAAM,CAACqC,IAAI,CAACL,GAAG,CAACM,KAAK,CAAC,CAAC,CAAC;AACjC;AAEA,SAASjB,OAAOA,CAACV,IAAI,EAAEK,IAAI,EAAEuB,IAAI,EAAE;EACjC,IAAIC,CAAC,GAAGxB,IAAI,CAACyB,MAAM,CAACC,QAAQ;EAC5B,IAAIC,CAAC,GAAG3B,IAAI,CAACyB,MAAM,CAACE,CAAC;EACrB,IAAIC,CAAC,GAAG5B,IAAI,CAACyB,MAAM,CAACG,CAAC;EACrB,IAAIC,CAAC,GAAG7B,IAAI,CAACyB,MAAM,CAACI,CAAC;EACrB,IAAIC,CAAC,GAAG,IAAIxC,EAAE,CAAC,CAAC,CAAC;EACjB,IAAIyC,CAAC;EACL,IAAIC,CAAC,GAAGC,QAAQ,CAACtC,IAAI,EAAEiC,CAAC,CAAC,CAACM,GAAG,CAACN,CAAC,CAAC;EAChC,IAAIO,CAAC,GAAG,KAAK;EACb,IAAIC,EAAE,GAAGC,MAAM,CAACb,CAAC,EAAEI,CAAC,EAAEjC,IAAI,EAAE4B,IAAI,CAAC;EACjC,OAAOY,CAAC,KAAK,KAAK,EAAE;IAClBJ,CAAC,GAAGO,OAAO,CAACV,CAAC,EAAEQ,EAAE,EAAEb,IAAI,CAAC;IACxBO,CAAC,GAAGS,KAAK,CAACV,CAAC,EAAEE,CAAC,EAAEJ,CAAC,EAAEC,CAAC,CAAC;IACrBO,CAAC,GAAGJ,CAAC,CAACS,IAAI,CAACZ,CAAC,CAAC,CAACa,IAAI,CAACT,CAAC,CAACU,GAAG,CAAClB,CAAC,CAACmB,GAAG,CAACb,CAAC,CAAC,CAAC,CAAC,CAACI,GAAG,CAACN,CAAC,CAAC;IAC1C,IAAIO,CAAC,CAACS,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;MACnBT,CAAC,GAAG,KAAK;MACTL,CAAC,GAAG,IAAIxC,EAAE,CAAC,CAAC,CAAC;IACf;EACF;EACA,OAAOgC,KAAK,CAACQ,CAAC,EAAEK,CAAC,CAAC;AACpB;AAEA,SAASb,KAAKA,CAACQ,CAAC,EAAEK,CAAC,EAAE;EACnBL,CAAC,GAAGA,CAAC,CAACe,OAAO,CAAC,CAAC;EACfV,CAAC,GAAGA,CAAC,CAACU,OAAO,CAAC,CAAC;;EAEf;EACA,IAAIf,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE;IAAEA,CAAC,GAAG,CAAC,CAAC,CAAC,CAACtB,MAAM,CAACsB,CAAC,CAAC;EAAE;EACtC,IAAIK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE;IAAEA,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC3B,MAAM,CAAC2B,CAAC,CAAC;EAAE;EAEtC,IAAIW,KAAK,GAAGhB,CAAC,CAACjB,MAAM,GAAGsB,CAAC,CAACtB,MAAM,GAAG,CAAC;EACnC,IAAIkC,GAAG,GAAG,CACR,IAAI,EAAED,KAAK,EAAE,IAAI,EAAEhB,CAAC,CAACjB,MAAM,CAC5B;EACDkC,GAAG,GAAGA,GAAG,CAACvC,MAAM,CAACsB,CAAC,EAAE,CAAC,IAAI,EAAEK,CAAC,CAACtB,MAAM,CAAC,EAAEsB,CAAC,CAAC;EACxC,OAAOnD,MAAM,CAACqC,IAAI,CAAC0B,GAAG,CAAC;AACzB;AAEA,SAASV,MAAMA,CAACb,CAAC,EAAEI,CAAC,EAAEjC,IAAI,EAAE4B,IAAI,EAAE;EAChCC,CAAC,GAAGxC,MAAM,CAACqC,IAAI,CAACG,CAAC,CAACqB,OAAO,CAAC,CAAC,CAAC;EAC5B,IAAIrB,CAAC,CAACX,MAAM,GAAGe,CAAC,CAACjB,UAAU,CAAC,CAAC,EAAE;IAC7B,IAAIqC,KAAK,GAAGhE,MAAM,CAACiE,KAAK,CAACrB,CAAC,CAACjB,UAAU,CAAC,CAAC,GAAGa,CAAC,CAACX,MAAM,CAAC;IACnDW,CAAC,GAAGxC,MAAM,CAACwB,MAAM,CAAC,CAACwC,KAAK,EAAExB,CAAC,CAAC,CAAC;EAC/B;EACA,IAAI0B,IAAI,GAAGvD,IAAI,CAACkB,MAAM;EACtB,IAAIsC,KAAK,GAAGC,WAAW,CAACzD,IAAI,EAAEiC,CAAC,CAAC;EAChC,IAAIyB,CAAC,GAAGrE,MAAM,CAACiE,KAAK,CAACC,IAAI,CAAC;EAC1BG,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACT,IAAIvB,CAAC,GAAG/C,MAAM,CAACiE,KAAK,CAACC,IAAI,CAAC;EAC1BnB,CAAC,GAAG7C,UAAU,CAACqC,IAAI,EAAEQ,CAAC,CAAC,CAACwB,MAAM,CAACF,CAAC,CAAC,CAACE,MAAM,CAACvE,MAAM,CAACqC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACkC,MAAM,CAAC/B,CAAC,CAAC,CAAC+B,MAAM,CAACJ,KAAK,CAAC,CAACK,MAAM,CAAC,CAAC;EAC3FH,CAAC,GAAGnE,UAAU,CAACqC,IAAI,EAAEQ,CAAC,CAAC,CAACwB,MAAM,CAACF,CAAC,CAAC,CAACG,MAAM,CAAC,CAAC;EAC1CzB,CAAC,GAAG7C,UAAU,CAACqC,IAAI,EAAEQ,CAAC,CAAC,CAACwB,MAAM,CAACF,CAAC,CAAC,CAACE,MAAM,CAACvE,MAAM,CAACqC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACkC,MAAM,CAAC/B,CAAC,CAAC,CAAC+B,MAAM,CAACJ,KAAK,CAAC,CAACK,MAAM,CAAC,CAAC;EAC3FH,CAAC,GAAGnE,UAAU,CAACqC,IAAI,EAAEQ,CAAC,CAAC,CAACwB,MAAM,CAACF,CAAC,CAAC,CAACG,MAAM,CAAC,CAAC;EAC1C,OAAO;IAAEzB,CAAC,EAAEA,CAAC;IAAEsB,CAAC,EAAEA;EAAE,CAAC;AACvB;AAEA,SAASpB,QAAQA,CAACwB,KAAK,EAAE7B,CAAC,EAAE;EAC1B,IAAI8B,IAAI,GAAG,IAAIpE,EAAE,CAACmE,KAAK,CAAC;EACxB,IAAIE,KAAK,GAAG,CAACF,KAAK,CAAC5C,MAAM,IAAI,CAAC,IAAIe,CAAC,CAACgC,SAAS,CAAC,CAAC;EAC/C,IAAID,KAAK,GAAG,CAAC,EAAE;IAAED,IAAI,CAACG,KAAK,CAACF,KAAK,CAAC;EAAE;EACpC,OAAOD,IAAI;AACb;AAEA,SAASN,WAAWA,CAACM,IAAI,EAAE9B,CAAC,EAAE;EAC5B8B,IAAI,GAAGzB,QAAQ,CAACyB,IAAI,EAAE9B,CAAC,CAAC;EACxB8B,IAAI,GAAGA,IAAI,CAACxB,GAAG,CAACN,CAAC,CAAC;EAClB,IAAIZ,GAAG,GAAGhC,MAAM,CAACqC,IAAI,CAACqC,IAAI,CAACb,OAAO,CAAC,CAAC,CAAC;EACrC,IAAI7B,GAAG,CAACH,MAAM,GAAGe,CAAC,CAACjB,UAAU,CAAC,CAAC,EAAE;IAC/B,IAAIqC,KAAK,GAAGhE,MAAM,CAACiE,KAAK,CAACrB,CAAC,CAACjB,UAAU,CAAC,CAAC,GAAGK,GAAG,CAACH,MAAM,CAAC;IACrDG,GAAG,GAAGhC,MAAM,CAACwB,MAAM,CAAC,CAACwC,KAAK,EAAEhC,GAAG,CAAC,CAAC;EACnC;EACA,OAAOA,GAAG;AACZ;AAEA,SAASsB,OAAOA,CAACV,CAAC,EAAEQ,EAAE,EAAEb,IAAI,EAAE;EAC5B,IAAIuC,CAAC;EACL,IAAI/B,CAAC;EAEL,GAAG;IACD+B,CAAC,GAAG9E,MAAM,CAACiE,KAAK,CAAC,CAAC,CAAC;IAEnB,OAAOa,CAAC,CAACjD,MAAM,GAAG,CAAC,GAAGe,CAAC,CAACgC,SAAS,CAAC,CAAC,EAAE;MACnCxB,EAAE,CAACiB,CAAC,GAAGnE,UAAU,CAACqC,IAAI,EAAEa,EAAE,CAACL,CAAC,CAAC,CAACwB,MAAM,CAACnB,EAAE,CAACiB,CAAC,CAAC,CAACG,MAAM,CAAC,CAAC;MACnDM,CAAC,GAAG9E,MAAM,CAACwB,MAAM,CAAC,CAACsD,CAAC,EAAE1B,EAAE,CAACiB,CAAC,CAAC,CAAC;IAC9B;IAEAtB,CAAC,GAAGE,QAAQ,CAAC6B,CAAC,EAAElC,CAAC,CAAC;IAClBQ,EAAE,CAACL,CAAC,GAAG7C,UAAU,CAACqC,IAAI,EAAEa,EAAE,CAACL,CAAC,CAAC,CAACwB,MAAM,CAACnB,EAAE,CAACiB,CAAC,CAAC,CAACE,MAAM,CAACvE,MAAM,CAACqC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACmC,MAAM,CAAC,CAAC;IAC5EpB,EAAE,CAACiB,CAAC,GAAGnE,UAAU,CAACqC,IAAI,EAAEa,EAAE,CAACL,CAAC,CAAC,CAACwB,MAAM,CAACnB,EAAE,CAACiB,CAAC,CAAC,CAACG,MAAM,CAAC,CAAC;EACrD,CAAC,QAAQzB,CAAC,CAACgC,GAAG,CAACnC,CAAC,CAAC,KAAK,CAAC,CAAC;EAExB,OAAOG,CAAC;AACV;AAEA,SAASQ,KAAKA,CAACV,CAAC,EAAEE,CAAC,EAAEJ,CAAC,EAAEC,CAAC,EAAE;EACzB,OAAOC,CAAC,CAACmC,KAAK,CAAC1E,EAAE,CAAC2E,IAAI,CAACtC,CAAC,CAAC,CAAC,CAACuC,MAAM,CAACnC,CAAC,CAAC,CAACoC,OAAO,CAAC,CAAC,CAACjC,GAAG,CAACN,CAAC,CAAC;AACvD;AAEAwC,MAAM,CAACC,OAAO,GAAG3E,IAAI;AACrB0E,MAAM,CAACC,OAAO,CAAChC,MAAM,GAAGA,MAAM;AAC9B+B,MAAM,CAACC,OAAO,CAAC/B,OAAO,GAAGA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script"}