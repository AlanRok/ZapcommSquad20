{"ast":null,"code":"import { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { has, isArray } from \"lodash\";\nimport { toast } from \"react-toastify\";\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { SocketContext } from \"../../context/Socket/SocketContext\";\nimport moment from \"moment\";\nconst useAuth = () => {\n  const history = useHistory();\n  const [isAuth, setIsAuth] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState({});\n  api.interceptors.request.use(config => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers[\"Authorization\"] = `Bearer ${JSON.parse(token)}`;\n      setIsAuth(true);\n    }\n    return config;\n  }, error => {\n    Promise.reject(error);\n  });\n  api.interceptors.response.use(response => {\n    return response;\n  }, async error => {\n    var _error$response, _error$response2;\n    const originalRequest = error.config;\n    if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      const {\n        data\n      } = await api.post(\"/auth/refresh_token\");\n      if (data) {\n        localStorage.setItem(\"token\", JSON.stringify(data.token));\n        api.defaults.headers.Authorization = `Bearer ${data.token}`;\n      }\n      return api(originalRequest);\n    }\n    if ((error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"companyId\");\n      api.defaults.headers.Authorization = undefined;\n      setIsAuth(false);\n    }\n    return Promise.reject(error);\n  });\n  const socketManager = useContext(SocketContext);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    (async () => {\n      if (token) {\n        try {\n          const {\n            data\n          } = await api.post(\"/auth/refresh_token\");\n          api.defaults.headers.Authorization = `Bearer ${data.token}`;\n          setIsAuth(true);\n          setUser(data.user);\n        } catch (err) {\n          toastError(err);\n        }\n      }\n      setLoading(false);\n    })();\n  }, []);\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    if (companyId) {\n      const socket = socketManager.getSocket(companyId);\n      socket.on(`company-${companyId}-user`, data => {\n        if (data.action === \"update\" && data.user.id === user.id) {\n          setUser(data.user);\n        }\n      });\n      return () => {\n        socket.disconnect();\n      };\n    }\n  }, [socketManager, user]);\n  const handleLogin = async userData => {\n    setLoading(true);\n    try {\n      const {\n        data\n      } = await api.post(\"http://localhost:8080/auth/login\", userData);\n      const {\n        user: {\n          companyId,\n          id,\n          company\n        }\n      } = data;\n      if (has(company, \"settings\") && isArray(company.settings)) {\n        const setting = company.settings.find(s => s.key === \"campaignsEnabled\");\n        if (setting && setting.value === \"true\") {\n          localStorage.setItem(\"cshow\", null); //regra pra exibir campanhas\n        }\n      }\n      moment.locale('pt-br');\n      const dueDate = data.user.company.dueDate;\n      const hoje = moment(moment()).format(\"DD/MM/yyyy\");\n      const vencimento = moment(dueDate).format(\"DD/MM/yyyy\");\n      var diff = moment(dueDate).diff(moment(moment()).format());\n      var before = moment(moment().format()).isBefore(dueDate);\n      var dias = moment.duration(diff).asDays();\n      if (before === true) {\n        localStorage.setItem(\"token\", JSON.stringify(data.token));\n        localStorage.setItem(\"companyId\", companyId);\n        localStorage.setItem(\"userId\", id);\n        localStorage.setItem(\"companyDueDate\", vencimento);\n        api.defaults.headers.Authorization = `Bearer ${data.token}`;\n        setUser(data.user);\n        setIsAuth(true);\n        toast.success(i18n.t(\"auth.toasts.success\"));\n        if (Math.round(dias) < 5) {\n          toast.warn(`Sua assinatura vence em ${Math.round(dias)} ${Math.round(dias) === 1 ? 'dia' : 'dias'} `);\n        }\n        history.push(\"/tickets\");\n        setLoading(false);\n      } else {\n        toastError(`Opss! Sua assinatura venceu ${vencimento}.\nEntre em contato com o Suporte para mais informações! `);\n        setLoading(false);\n      }\n\n      //quebra linha \n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n  const handleLogout = async () => {\n    setLoading(true);\n    try {\n      await api.delete(\"/auth/logout\");\n      setIsAuth(false);\n      setUser({});\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"companyId\");\n      localStorage.removeItem(\"userId\");\n      localStorage.removeItem(\"cshow\");\n      api.defaults.headers.Authorization = undefined;\n      setLoading(false);\n      history.push(\"/login\");\n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n  const getCurrentUserInfo = async () => {\n    try {\n      const {\n        data\n      } = await api.get(\"/auth/me\");\n      return data;\n    } catch (err) {\n      toastError(err);\n    }\n  };\n  return {\n    isAuth,\n    user,\n    loading,\n    handleLogin,\n    handleLogout,\n    getCurrentUserInfo\n  };\n};\nexport default useAuth;","map":{"version":3,"names":["useState","useEffect","useContext","useHistory","has","isArray","toast","i18n","api","toastError","SocketContext","moment","useAuth","history","isAuth","setIsAuth","loading","setLoading","user","setUser","interceptors","request","use","config","token","localStorage","getItem","headers","JSON","parse","error","Promise","reject","response","_error$response","_error$response2","originalRequest","status","_retry","data","post","setItem","stringify","defaults","Authorization","removeItem","undefined","socketManager","err","companyId","socket","getSocket","on","action","id","disconnect","handleLogin","userData","company","settings","setting","find","s","key","value","locale","dueDate","hoje","format","vencimento","diff","before","isBefore","dias","duration","asDays","success","t","Math","round","warn","push","handleLogout","delete","getCurrentUserInfo","get"],"sources":["/app/src/hooks/useAuth.js/index.js"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { has, isArray } from \"lodash\";\n\nimport { toast } from \"react-toastify\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { SocketContext } from \"../../context/Socket/SocketContext\";\nimport moment from \"moment\";\nconst useAuth = () => {\n  const history = useHistory();\n  const [isAuth, setIsAuth] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState({});\n\n  api.interceptors.request.use(\n    (config) => {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        config.headers[\"Authorization\"] = `Bearer ${JSON.parse(token)}`;\n        setIsAuth(true);\n      }\n      return config;\n    },\n    (error) => {\n      Promise.reject(error);\n    }\n  );\n\n  api.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    async (error) => {\n      const originalRequest = error.config;\n      if (error?.response?.status === 403 && !originalRequest._retry) {\n        originalRequest._retry = true;\n\n        const { data } = await api.post(\"/auth/refresh_token\");\n        if (data) {\n          localStorage.setItem(\"token\", JSON.stringify(data.token));\n          api.defaults.headers.Authorization = `Bearer ${data.token}`;\n        }\n        return api(originalRequest);\n      }\n      if (error?.response?.status === 401) {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"companyId\");\n        api.defaults.headers.Authorization = undefined;\n        setIsAuth(false);\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  const socketManager = useContext(SocketContext);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    (async () => {\n      if (token) {\n        try {\n          const { data } = await api.post(\"/auth/refresh_token\");\n          api.defaults.headers.Authorization = `Bearer ${data.token}`;\n          setIsAuth(true);\n          setUser(data.user);\n        } catch (err) {\n          toastError(err);\n        }\n      }\n      setLoading(false);\n    })();\n  }, []);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    if (companyId) {\n   \n      const socket = socketManager.getSocket(companyId);\n\n      socket.on(`company-${companyId}-user`, (data) => {\n        if (data.action === \"update\" && data.user.id === user.id) {\n          setUser(data.user);\n        }\n      });\n    \n    \n    return () => {\n      socket.disconnect();\n    };\n  }\n  }, [socketManager, user]);\n\n  const handleLogin = async (userData) => {\n    setLoading(true);\n\n    try {\n      const { data } = await api.post(\"http://localhost:8080/auth/login\", userData);\n      const {\n        user: { companyId, id, company },\n      } = data;\n\n      if (has(company, \"settings\") && isArray(company.settings)) {\n        const setting = company.settings.find(\n          (s) => s.key === \"campaignsEnabled\"\n        );\n        if (setting && setting.value === \"true\") {\n          localStorage.setItem(\"cshow\", null); //regra pra exibir campanhas\n        }\n      }\n\n      moment.locale('pt-br');\n      const dueDate = data.user.company.dueDate;\n      const hoje = moment(moment()).format(\"DD/MM/yyyy\");\n      const vencimento = moment(dueDate).format(\"DD/MM/yyyy\");\n\n      var diff = moment(dueDate).diff(moment(moment()).format());\n\n      var before = moment(moment().format()).isBefore(dueDate);\n      var dias = moment.duration(diff).asDays();\n\n      if (before === true) {\n        localStorage.setItem(\"token\", JSON.stringify(data.token));\n        localStorage.setItem(\"companyId\", companyId);\n        localStorage.setItem(\"userId\", id);\n        localStorage.setItem(\"companyDueDate\", vencimento);\n        api.defaults.headers.Authorization = `Bearer ${data.token}`;\n        setUser(data.user);\n        setIsAuth(true);\n        toast.success(i18n.t(\"auth.toasts.success\"));\n        if (Math.round(dias) < 5) {\n          toast.warn(`Sua assinatura vence em ${Math.round(dias)} ${Math.round(dias) === 1 ? 'dia' : 'dias'} `);\n        }\n        history.push(\"/tickets\");\n        setLoading(false);\n      } else {\n        toastError(`Opss! Sua assinatura venceu ${vencimento}.\nEntre em contato com o Suporte para mais informações! `);\n        setLoading(false);\n      }\n\n      //quebra linha \n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n\n  const handleLogout = async () => {\n    setLoading(true);\n\n    try {\n      await api.delete(\"/auth/logout\");\n      setIsAuth(false);\n      setUser({});\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"companyId\");\n      localStorage.removeItem(\"userId\");\n      localStorage.removeItem(\"cshow\");\n      api.defaults.headers.Authorization = undefined;\n      setLoading(false);\n      history.push(\"/login\");\n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n\n  const getCurrentUserInfo = async () => {\n    try {\n      const { data } = await api.get(\"/auth/me\");\n      return data;\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  return {\n    isAuth,\n    user,\n    loading,\n    handleLogin,\n    handleLogout,\n    getCurrentUserInfo,\n  };\n};\n\nexport default useAuth;\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,GAAG,EAAEC,OAAO,QAAQ,QAAQ;AAErC,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,aAAa,QAAQ,oCAAoC;AAClE,OAAOC,MAAM,MAAM,QAAQ;AAC3B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAMC,OAAO,GAAGV,UAAU,CAAC,CAAC;EAC5B,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpCQ,GAAG,CAACY,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;IACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAI,UAASC,IAAI,CAACC,KAAK,CAACL,KAAK,CAAE,EAAC;MAC/DT,SAAS,CAAC,IAAI,CAAC;IACjB;IACA,OAAOQ,MAAM;EACf,CAAC,EACAO,KAAK,IAAK;IACTC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EACvB,CACF,CAAC;EAEDtB,GAAG,CAACY,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC1BW,QAAQ,IAAK;IACZ,OAAOA,QAAQ;EACjB,CAAC,EACD,MAAOH,KAAK,IAAK;IAAA,IAAAI,eAAA,EAAAC,gBAAA;IACf,MAAMC,eAAe,GAAGN,KAAK,CAACP,MAAM;IACpC,IAAI,CAAAO,KAAK,aAALA,KAAK,wBAAAI,eAAA,GAALJ,KAAK,CAAEG,QAAQ,cAAAC,eAAA,uBAAfA,eAAA,CAAiBG,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;MAC9DF,eAAe,CAACE,MAAM,GAAG,IAAI;MAE7B,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAM/B,GAAG,CAACgC,IAAI,CAAC,qBAAqB,CAAC;MACtD,IAAID,IAAI,EAAE;QACRd,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEb,IAAI,CAACc,SAAS,CAACH,IAAI,CAACf,KAAK,CAAC,CAAC;QACzDhB,GAAG,CAACmC,QAAQ,CAAChB,OAAO,CAACiB,aAAa,GAAI,UAASL,IAAI,CAACf,KAAM,EAAC;MAC7D;MACA,OAAOhB,GAAG,CAAC4B,eAAe,CAAC;IAC7B;IACA,IAAI,CAAAN,KAAK,aAALA,KAAK,wBAAAK,gBAAA,GAALL,KAAK,CAAEG,QAAQ,cAAAE,gBAAA,uBAAfA,gBAAA,CAAiBE,MAAM,MAAK,GAAG,EAAE;MACnCZ,YAAY,CAACoB,UAAU,CAAC,OAAO,CAAC;MAChCpB,YAAY,CAACoB,UAAU,CAAC,WAAW,CAAC;MACpCrC,GAAG,CAACmC,QAAQ,CAAChB,OAAO,CAACiB,aAAa,GAAGE,SAAS;MAC9C/B,SAAS,CAAC,KAAK,CAAC;IAClB;IACA,OAAOgB,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B,CACF,CAAC;EAED,MAAMiB,aAAa,GAAG7C,UAAU,CAACQ,aAAa,CAAC;EAE/CT,SAAS,CAAC,MAAM;IACd,MAAMuB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,CAAC,YAAY;MACX,IAAIF,KAAK,EAAE;QACT,IAAI;UACF,MAAM;YAAEe;UAAK,CAAC,GAAG,MAAM/B,GAAG,CAACgC,IAAI,CAAC,qBAAqB,CAAC;UACtDhC,GAAG,CAACmC,QAAQ,CAAChB,OAAO,CAACiB,aAAa,GAAI,UAASL,IAAI,CAACf,KAAM,EAAC;UAC3DT,SAAS,CAAC,IAAI,CAAC;UACfI,OAAO,CAACoB,IAAI,CAACrB,IAAI,CAAC;QACpB,CAAC,CAAC,OAAO8B,GAAG,EAAE;UACZvC,UAAU,CAACuC,GAAG,CAAC;QACjB;MACF;MACA/B,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACd,MAAMgD,SAAS,GAAGxB,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnD,IAAIuB,SAAS,EAAE;MAEb,MAAMC,MAAM,GAAGH,aAAa,CAACI,SAAS,CAACF,SAAS,CAAC;MAEjDC,MAAM,CAACE,EAAE,CAAE,WAAUH,SAAU,OAAM,EAAGV,IAAI,IAAK;QAC/C,IAAIA,IAAI,CAACc,MAAM,KAAK,QAAQ,IAAId,IAAI,CAACrB,IAAI,CAACoC,EAAE,KAAKpC,IAAI,CAACoC,EAAE,EAAE;UACxDnC,OAAO,CAACoB,IAAI,CAACrB,IAAI,CAAC;QACpB;MACF,CAAC,CAAC;MAGJ,OAAO,MAAM;QACXgC,MAAM,CAACK,UAAU,CAAC,CAAC;MACrB,CAAC;IACH;EACA,CAAC,EAAE,CAACR,aAAa,EAAE7B,IAAI,CAAC,CAAC;EAEzB,MAAMsC,WAAW,GAAG,MAAOC,QAAQ,IAAK;IACtCxC,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAM;QAAEsB;MAAK,CAAC,GAAG,MAAM/B,GAAG,CAACgC,IAAI,CAAC,kCAAkC,EAAEiB,QAAQ,CAAC;MAC7E,MAAM;QACJvC,IAAI,EAAE;UAAE+B,SAAS;UAAEK,EAAE;UAAEI;QAAQ;MACjC,CAAC,GAAGnB,IAAI;MAER,IAAInC,GAAG,CAACsD,OAAO,EAAE,UAAU,CAAC,IAAIrD,OAAO,CAACqD,OAAO,CAACC,QAAQ,CAAC,EAAE;QACzD,MAAMC,OAAO,GAAGF,OAAO,CAACC,QAAQ,CAACE,IAAI,CAClCC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAK,kBACnB,CAAC;QACD,IAAIH,OAAO,IAAIA,OAAO,CAACI,KAAK,KAAK,MAAM,EAAE;UACvCvC,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;QACvC;MACF;MAEA9B,MAAM,CAACsD,MAAM,CAAC,OAAO,CAAC;MACtB,MAAMC,OAAO,GAAG3B,IAAI,CAACrB,IAAI,CAACwC,OAAO,CAACQ,OAAO;MACzC,MAAMC,IAAI,GAAGxD,MAAM,CAACA,MAAM,CAAC,CAAC,CAAC,CAACyD,MAAM,CAAC,YAAY,CAAC;MAClD,MAAMC,UAAU,GAAG1D,MAAM,CAACuD,OAAO,CAAC,CAACE,MAAM,CAAC,YAAY,CAAC;MAEvD,IAAIE,IAAI,GAAG3D,MAAM,CAACuD,OAAO,CAAC,CAACI,IAAI,CAAC3D,MAAM,CAACA,MAAM,CAAC,CAAC,CAAC,CAACyD,MAAM,CAAC,CAAC,CAAC;MAE1D,IAAIG,MAAM,GAAG5D,MAAM,CAACA,MAAM,CAAC,CAAC,CAACyD,MAAM,CAAC,CAAC,CAAC,CAACI,QAAQ,CAACN,OAAO,CAAC;MACxD,IAAIO,IAAI,GAAG9D,MAAM,CAAC+D,QAAQ,CAACJ,IAAI,CAAC,CAACK,MAAM,CAAC,CAAC;MAEzC,IAAIJ,MAAM,KAAK,IAAI,EAAE;QACnB9C,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEb,IAAI,CAACc,SAAS,CAACH,IAAI,CAACf,KAAK,CAAC,CAAC;QACzDC,YAAY,CAACgB,OAAO,CAAC,WAAW,EAAEQ,SAAS,CAAC;QAC5CxB,YAAY,CAACgB,OAAO,CAAC,QAAQ,EAAEa,EAAE,CAAC;QAClC7B,YAAY,CAACgB,OAAO,CAAC,gBAAgB,EAAE4B,UAAU,CAAC;QAClD7D,GAAG,CAACmC,QAAQ,CAAChB,OAAO,CAACiB,aAAa,GAAI,UAASL,IAAI,CAACf,KAAM,EAAC;QAC3DL,OAAO,CAACoB,IAAI,CAACrB,IAAI,CAAC;QAClBH,SAAS,CAAC,IAAI,CAAC;QACfT,KAAK,CAACsE,OAAO,CAACrE,IAAI,CAACsE,CAAC,CAAC,qBAAqB,CAAC,CAAC;QAC5C,IAAIC,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,GAAG,CAAC,EAAE;UACxBnE,KAAK,CAAC0E,IAAI,CAAE,2BAA0BF,IAAI,CAACC,KAAK,CAACN,IAAI,CAAE,IAAGK,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,MAAO,GAAE,CAAC;QACvG;QACA5D,OAAO,CAACoE,IAAI,CAAC,UAAU,CAAC;QACxBhE,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,MAAM;QACLR,UAAU,CAAE,+BAA8B4D,UAAW;AAC7D,uDAAuD,CAAC;QAChDpD,UAAU,CAAC,KAAK,CAAC;MACnB;;MAEA;IACF,CAAC,CAAC,OAAO+B,GAAG,EAAE;MACZvC,UAAU,CAACuC,GAAG,CAAC;MACf/B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMiE,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BjE,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMT,GAAG,CAAC2E,MAAM,CAAC,cAAc,CAAC;MAChCpE,SAAS,CAAC,KAAK,CAAC;MAChBI,OAAO,CAAC,CAAC,CAAC,CAAC;MACXM,YAAY,CAACoB,UAAU,CAAC,OAAO,CAAC;MAChCpB,YAAY,CAACoB,UAAU,CAAC,WAAW,CAAC;MACpCpB,YAAY,CAACoB,UAAU,CAAC,QAAQ,CAAC;MACjCpB,YAAY,CAACoB,UAAU,CAAC,OAAO,CAAC;MAChCrC,GAAG,CAACmC,QAAQ,CAAChB,OAAO,CAACiB,aAAa,GAAGE,SAAS;MAC9C7B,UAAU,CAAC,KAAK,CAAC;MACjBJ,OAAO,CAACoE,IAAI,CAAC,QAAQ,CAAC;IACxB,CAAC,CAAC,OAAOjC,GAAG,EAAE;MACZvC,UAAU,CAACuC,GAAG,CAAC;MACf/B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMmE,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAM;QAAE7C;MAAK,CAAC,GAAG,MAAM/B,GAAG,CAAC6E,GAAG,CAAC,UAAU,CAAC;MAC1C,OAAO9C,IAAI;IACb,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZvC,UAAU,CAACuC,GAAG,CAAC;IACjB;EACF,CAAC;EAED,OAAO;IACLlC,MAAM;IACNI,IAAI;IACJF,OAAO;IACPwC,WAAW;IACX0B,YAAY;IACZE;EACF,CAAC;AACH,CAAC;AAED,eAAexE,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}