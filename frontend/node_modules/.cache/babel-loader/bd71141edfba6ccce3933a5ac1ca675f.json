{"ast":null,"code":"var _jsxFileName = \"/app/src/components/CheckoutPage/Forms/AddressForm.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { InputField, SelectField } from \"../../FormFields\";\nimport { AuthContext } from \"../../../context/Auth/AuthContext\";\nconst countries = [{\n  value: \"BR\",\n  label: \"Brasil\"\n}, {\n  value: \"usa\",\n  label: \"United States\"\n}];\nexport default function AddressForm(props) {\n  const {\n    user\n  } = useContext(AuthContext);\n  const [billingName, setBillingName] = useState(user.company.billingName);\n  const [addressZipCode, setAddressZipCode] = useState(user.company.addressZipCode);\n  const [addressStreet, setAddressStreet] = useState(user.company.addressStreet);\n  const [addressState, setAddressState] = useState(user.company.addressState);\n  const [addressCity, setAddressCity] = useState(user.company.addressCity);\n  const [addressDistrict, setAddressDistrict] = useState(user.company.addressDistrict);\n  const {\n    formField: {\n      firstName,\n      address1,\n      city,\n      state,\n      zipcode,\n      country\n    },\n    setFieldValue\n  } = props;\n  useEffect(() => {\n    setFieldValue(\"firstName\", billingName);\n    setFieldValue(\"zipcode\", addressZipCode);\n    setFieldValue(\"address2\", addressStreet);\n    setFieldValue(\"state\", addressState);\n    setFieldValue(\"city\", addressCity);\n    setFieldValue(\"country\", addressDistrict);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Vamos precisar de algumas informa\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    name: firstName.name,\n    label: firstName.label,\n    fullWidth: true,\n    value: billingName,\n    onChange: e => {\n      setBillingName(e.target.value);\n      setFieldValue(\"firstName\", e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SelectField, {\n    name: country.name,\n    label: country.label,\n    data: countries,\n    fullWidth: true,\n    value: addressDistrict,\n    onChange: e => {\n      setAddressDistrict(e.target.value);\n      setFieldValue(\"country\", e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    name: zipcode.name,\n    label: zipcode.label,\n    fullWidth: true,\n    value: addressZipCode,\n    onChange: e => {\n      setAddressZipCode(e.target.value);\n      setFieldValue(\"zipcode\", e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    name: address1.name,\n    label: address1.label,\n    fullWidth: true,\n    value: addressStreet,\n    onChange: e => {\n      setAddressStreet(e.target.value);\n      setFieldValue(\"address2\", e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    name: state.name,\n    label: state.label,\n    fullWidth: true,\n    value: addressState,\n    onChange: e => {\n      setAddressState(e.target.value);\n      setFieldValue(\"state\", e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    name: city.name,\n    label: city.label,\n    fullWidth: true,\n    value: addressCity,\n    onChange: e => {\n      setAddressCity(e.target.value);\n      setFieldValue(\"city\", e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","Grid","Typography","InputField","SelectField","AuthContext","countries","value","label","AddressForm","props","user","billingName","setBillingName","company","addressZipCode","setAddressZipCode","addressStreet","setAddressStreet","addressState","setAddressState","addressCity","setAddressCity","addressDistrict","setAddressDistrict","formField","firstName","address1","city","state","zipcode","country","setFieldValue","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","container","spacing","item","xs","sm","name","fullWidth","onChange","e","target","data"],"sources":["/app/src/components/CheckoutPage/Forms/AddressForm.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { InputField, SelectField } from \"../../FormFields\";\nimport { AuthContext } from \"../../../context/Auth/AuthContext\";\n\nconst countries = [\n  {\n    value: \"BR\",\n    label: \"Brasil\",\n  },\n  {\n    value: \"usa\",\n    label: \"United States\",\n  },\n];\n\nexport default function AddressForm(props) {\n\n  const { user } = useContext(AuthContext);\n  const [billingName, setBillingName] = useState(user.company.billingName);\n  const [addressZipCode, setAddressZipCode] = useState(user.company.addressZipCode);\n  const [addressStreet, setAddressStreet] = useState(user.company.addressStreet);\n  const [addressState, setAddressState] = useState(user.company.addressState);\n  const [addressCity, setAddressCity] = useState(user.company.addressCity);\n  const [addressDistrict, setAddressDistrict] = useState(user.company.addressDistrict);\n\n  const {\n    formField: {\n      firstName,\n      address1,\n      city,\n      state,\n      zipcode,\n      country,\n    },\n    setFieldValue\n  } = props;\n  useEffect(() => {\n    setFieldValue(\"firstName\", billingName)\n    setFieldValue(\"zipcode\", addressZipCode)\n    setFieldValue(\"address2\", addressStreet)\n    setFieldValue(\"state\", addressState)\n    setFieldValue(\"city\", addressCity)\n    setFieldValue(\"country\", addressDistrict)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Vamos precisar de algumas informações\n      </Typography>\n      <Grid container spacing={3}>\n\n        <Grid item xs={6} sm={6}>\n          <InputField name={firstName.name} label={firstName.label} fullWidth\n            value={billingName}\n            onChange={(e) => {\n              setBillingName(e.target.value)\n              setFieldValue(\"firstName\", e.target.value)\n            }}\n          />\n        </Grid>\n        <Grid item xs={6} sm={6}>\n          <SelectField\n            name={country.name}\n            label={country.label}\n            data={countries}\n            fullWidth\n            value={addressDistrict}\n            onChange={(e) => {\n              setAddressDistrict(e.target.value)\n              setFieldValue(\"country\", e.target.value)\n            }\n            }\n          />\n        </Grid>\n\n        <Grid item xs={4}>\n          <InputField\n            name={zipcode.name}\n            label={zipcode.label}\n            fullWidth\n            value={addressZipCode}\n            onChange={(e) => {\n              setAddressZipCode(e.target.value)\n              setFieldValue(\"zipcode\", e.target.value)\n            }}\n          />\n        </Grid>\n        <Grid item xs={8}>\n          <InputField\n            name={address1.name}\n            label={address1.label}\n            fullWidth\n            value={addressStreet}\n            onChange={(e) => {\n              setAddressStreet(e.target.value)\n              setFieldValue(\"address2\", e.target.value)\n\n            }}\n          />\n        </Grid>\n\n        <Grid item xs={4}>\n          <InputField\n            name={state.name}\n            label={state.label}\n            fullWidth\n            value={addressState}\n            onChange={(e) => {\n              setAddressState(e.target.value)\n              setFieldValue(\"state\", e.target.value)\n\n            }}\n          />\n        </Grid>\n        <Grid item xs={8}>\n          <InputField\n            name={city.name}\n            label={city.label}\n            fullWidth\n            value={addressCity}\n            onChange={(e) => {\n              setAddressCity(e.target.value)\n              setFieldValue(\"city\", e.target.value)\n            }}\n          />\n        </Grid>\n\n      </Grid>\n    </React.Fragment>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}