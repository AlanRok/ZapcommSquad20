{"ast":null,"code":"var _jsxFileName = \"/app/src/components/FormFields/DatePickerField.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useField } from 'formik';\nimport Grid from '@material-ui/core/Grid';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nexport default function DatePickerField(props) {\n  const [field, meta, helper] = useField(props);\n  const {\n    touched,\n    error\n  } = meta;\n  const {\n    setValue\n  } = helper;\n  const isError = touched && error && true;\n  const {\n    value\n  } = field;\n  const [selectedDate, setSelectedDate] = useState(null);\n  useEffect(() => {\n    if (value) {\n      const date = new Date(value);\n      setSelectedDate(date);\n    }\n  }, [value]);\n  function _onChange(date) {\n    if (date) {\n      setSelectedDate(date);\n      try {\n        const ISODateString = date.toISOString();\n        setValue(ISODateString);\n      } catch (error) {\n        setValue(date);\n      }\n    } else {\n      setValue(date);\n    }\n  }\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, Object.assign({}, field, props, {\n    value: selectedDate,\n    onChange: _onChange,\n    error: isError,\n    invalidDateMessage: isError && error,\n    helperText: isError && error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"names":["React","useState","useEffect","useField","Grid","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","DatePickerField","props","field","meta","helper","touched","error","setValue","isError","value","selectedDate","setSelectedDate","date","Date","_onChange","ISODateString","toISOString","createElement","container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","utils","Object","assign","onChange","invalidDateMessage","helperText"],"sources":["/app/src/components/FormFields/DatePickerField.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useField } from 'formik';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nexport default function DatePickerField(props) {\n  const [field, meta, helper] = useField(props);\n  const { touched, error } = meta;\n  const { setValue } = helper;\n  const isError = touched && error && true;\n  const { value } = field;\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    if (value) {\n      const date = new Date(value);\n      setSelectedDate(date);\n    }\n  }, [value]);\n\n  function _onChange(date) {\n    if (date) {\n      setSelectedDate(date);\n      try {\n        const ISODateString = date.toISOString();\n        setValue(ISODateString);\n      } catch (error) {\n        setValue(date);\n      }\n    } else {\n      setValue(date);\n    }\n  }\n\n  return (\n    <Grid container>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n          {...field}\n          {...props}\n          value={selectedDate}\n          onChange={_onChange}\n          error={isError}\n          invalidDateMessage={isError && error}\n          helperText={isError && error}\n        />\n      </MuiPickersUtilsProvider>\n    </Grid>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,QAAQ;AACjC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,SACEC,uBAAuB,EACvBC,kBAAkB,QACb,sBAAsB;AAC7B,OAAOC,YAAY,MAAM,mBAAmB;AAE5C,eAAe,SAASC,eAAeA,CAACC,KAAK,EAAE;EAC7C,MAAM,CAACC,KAAK,EAAEC,IAAI,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAACM,KAAK,CAAC;EAC7C,MAAM;IAAEI,OAAO;IAAEC;EAAM,CAAC,GAAGH,IAAI;EAC/B,MAAM;IAAEI;EAAS,CAAC,GAAGH,MAAM;EAC3B,MAAMI,OAAO,GAAGH,OAAO,IAAIC,KAAK,IAAI,IAAI;EACxC,MAAM;IAAEG;EAAM,CAAC,GAAGP,KAAK;EACvB,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,IAAIe,KAAK,EAAE;MACT,MAAMG,IAAI,GAAG,IAAIC,IAAI,CAACJ,KAAK,CAAC;MAC5BE,eAAe,CAACC,IAAI,CAAC;IACvB;EACF,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,SAASK,SAASA,CAACF,IAAI,EAAE;IACvB,IAAIA,IAAI,EAAE;MACRD,eAAe,CAACC,IAAI,CAAC;MACrB,IAAI;QACF,MAAMG,aAAa,GAAGH,IAAI,CAACI,WAAW,CAAC,CAAC;QACxCT,QAAQ,CAACQ,aAAa,CAAC;MACzB,CAAC,CAAC,OAAOT,KAAK,EAAE;QACdC,QAAQ,CAACK,IAAI,CAAC;MAChB;IACF,CAAC,MAAM;MACLL,QAAQ,CAACK,IAAI,CAAC;IAChB;EACF;EAEA,oBACEpB,KAAA,CAAAyB,aAAA,CAACrB,IAAI;IAACsB,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACbhC,KAAA,CAAAyB,aAAA,CAACpB,uBAAuB;IAAC4B,KAAK,EAAE1B,YAAa;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3ChC,KAAA,CAAAyB,aAAA,CAACnB,kBAAkB,EAAA4B,MAAA,CAAAC,MAAA,KACbzB,KAAK,EACLD,KAAK;IACTQ,KAAK,EAAEC,YAAa;IACpBkB,QAAQ,EAAEd,SAAU;IACpBR,KAAK,EAAEE,OAAQ;IACfqB,kBAAkB,EAAErB,OAAO,IAAIF,KAAM;IACrCwB,UAAU,EAAEtB,OAAO,IAAIF,KAAM;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAC9B,CACsB,CACrB,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module"}