{"ast":null,"code":"'use strict';\n\nfunction oldBrowser() {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11');\n}\nvar crypto = global.crypto || global.msCrypto;\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes;\n} else {\n  module.exports = oldBrowser;\n}\nfunction randomBytes(size, cb) {\n  // phantomjs needs to throw\n  if (size > 65536) throw new Error('requested too many random bytes');\n  // in case browserify  isn't using the Uint8Array version\n  var rawBytes = new global.Uint8Array(size);\n\n  // This will not work in older browsers.\n  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n  if (size > 0) {\n    // getRandomValues fails on IE if size == 0\n    crypto.getRandomValues(rawBytes);\n  }\n  // phantomjs doesn't like a buffer being passed here\n  var bytes = new Buffer(rawBytes.buffer);\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes);\n    });\n  }\n  return bytes;\n}","map":{"version":3,"names":["oldBrowser","Error","crypto","global","msCrypto","getRandomValues","module","exports","randomBytes","size","cb","rawBytes","Uint8Array","bytes","Buffer","buffer","process","nextTick"],"sources":["/app/node_modules/randombytes/browser.js"],"sourcesContent":["'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\n\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > 65536) throw new Error('requested too many random bytes')\n  // in case browserify  isn't using the Uint8Array version\n  var rawBytes = new global.Uint8Array(size)\n\n  // This will not work in older browsers.\n  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    crypto.getRandomValues(rawBytes)\n  }\n  // phantomjs doesn't like a buffer being passed here\n  var bytes = new Buffer(rawBytes.buffer)\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,UAAUA,CAAA,EAAI;EACrB,MAAM,IAAIC,KAAK,CAAC,4GAA4G,CAAC;AAC/H;AAEA,IAAIC,MAAM,GAAGC,MAAM,CAACD,MAAM,IAAIC,MAAM,CAACC,QAAQ;AAE7C,IAAIF,MAAM,IAAIA,MAAM,CAACG,eAAe,EAAE;EACpCC,MAAM,CAACC,OAAO,GAAGC,WAAW;AAC9B,CAAC,MAAM;EACLF,MAAM,CAACC,OAAO,GAAGP,UAAU;AAC7B;AAEA,SAASQ,WAAWA,CAAEC,IAAI,EAAEC,EAAE,EAAE;EAC9B;EACA,IAAID,IAAI,GAAG,KAAK,EAAE,MAAM,IAAIR,KAAK,CAAC,iCAAiC,CAAC;EACpE;EACA,IAAIU,QAAQ,GAAG,IAAIR,MAAM,CAACS,UAAU,CAACH,IAAI,CAAC;;EAE1C;EACA;EACA,IAAIA,IAAI,GAAG,CAAC,EAAE;IAAG;IACfP,MAAM,CAACG,eAAe,CAACM,QAAQ,CAAC;EAClC;EACA;EACA,IAAIE,KAAK,GAAG,IAAIC,MAAM,CAACH,QAAQ,CAACI,MAAM,CAAC;EAEvC,IAAI,OAAOL,EAAE,KAAK,UAAU,EAAE;IAC5B,OAAOM,OAAO,CAACC,QAAQ,CAAC,YAAY;MAClCP,EAAE,CAAC,IAAI,EAAEG,KAAK,CAAC;IACjB,CAAC,CAAC;EACJ;EAEA,OAAOA,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"script"}