{"ast":null,"code":"function getRGB(c) {\n  return parseInt(c, 16) || c;\n}\nfunction getsRGB(c) {\n  return getRGB(c) / 255 <= 0.03928 ? getRGB(c) / 255 / 12.92 : Math.pow((getRGB(c) / 255 + 0.055) / 1.055, 2.4);\n}\nfunction getLuminance(hexColor) {\n  return 0.2126 * getsRGB(hexColor.substr(1, 2)) + 0.7152 * getsRGB(hexColor.substr(3, 2)) + 0.0722 * getsRGB(hexColor.substr(-2));\n}\nfunction getContrast(f, b) {\n  const L1 = getLuminance(f);\n  const L2 = getLuminance(b);\n  return (Math.max(L1, L2) + 0.05) / (Math.min(L1, L2) + 0.05);\n}\nfunction getTextColor(bgColor) {\n  const whiteContrast = getContrast(bgColor, '#ffffff');\n  const blackContrast = getContrast(bgColor, '#000000');\n  return whiteContrast > blackContrast ? '#ffffff' : '#000000';\n}\nconst contrastColor = color => {\n  return getTextColor(color);\n};\nexport default contrastColor;","map":{"version":3,"names":["getRGB","c","parseInt","getsRGB","Math","pow","getLuminance","hexColor","substr","getContrast","f","b","L1","L2","max","min","getTextColor","bgColor","whiteContrast","blackContrast","contrastColor","color"],"sources":["/app/src/helpers/contrastColor.js"],"sourcesContent":["function getRGB(c) {\n  return parseInt(c, 16) || c\n}\n\nfunction getsRGB(c) {\n  return getRGB(c) / 255 <= 0.03928\n    ? getRGB(c) / 255 / 12.92\n    : Math.pow((getRGB(c) / 255 + 0.055) / 1.055, 2.4)\n}\n\nfunction getLuminance(hexColor) {\n  return (\n    0.2126 * getsRGB(hexColor.substr(1, 2)) +\n    0.7152 * getsRGB(hexColor.substr(3, 2)) +\n    0.0722 * getsRGB(hexColor.substr(-2))\n  )\n}\n\nfunction getContrast(f, b) {\n  const L1 = getLuminance(f)\n  const L2 = getLuminance(b)\n  return (Math.max(L1, L2) + 0.05) / (Math.min(L1, L2) + 0.05)\n}\n\nfunction getTextColor(bgColor) {\n  const whiteContrast = getContrast(bgColor, '#ffffff')\n  const blackContrast = getContrast(bgColor, '#000000')\n\n  return whiteContrast > blackContrast ? '#ffffff' : '#000000'\n}\n\nconst contrastColor = (color) => {\n    return getTextColor(color);\n}\n\nexport default contrastColor;"],"mappings":"AAAA,SAASA,MAAMA,CAACC,CAAC,EAAE;EACjB,OAAOC,QAAQ,CAACD,CAAC,EAAE,EAAE,CAAC,IAAIA,CAAC;AAC7B;AAEA,SAASE,OAAOA,CAACF,CAAC,EAAE;EAClB,OAAOD,MAAM,CAACC,CAAC,CAAC,GAAG,GAAG,IAAI,OAAO,GAC7BD,MAAM,CAACC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,GACvBG,IAAI,CAACC,GAAG,CAAC,CAACL,MAAM,CAACC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,IAAI,KAAK,EAAE,GAAG,CAAC;AACtD;AAEA,SAASK,YAAYA,CAACC,QAAQ,EAAE;EAC9B,OACE,MAAM,GAAGJ,OAAO,CAACI,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GACvC,MAAM,GAAGL,OAAO,CAACI,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GACvC,MAAM,GAAGL,OAAO,CAACI,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAEzC;AAEA,SAASC,WAAWA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACzB,MAAMC,EAAE,GAAGN,YAAY,CAACI,CAAC,CAAC;EAC1B,MAAMG,EAAE,GAAGP,YAAY,CAACK,CAAC,CAAC;EAC1B,OAAO,CAACP,IAAI,CAACU,GAAG,CAACF,EAAE,EAAEC,EAAE,CAAC,GAAG,IAAI,KAAKT,IAAI,CAACW,GAAG,CAACH,EAAE,EAAEC,EAAE,CAAC,GAAG,IAAI,CAAC;AAC9D;AAEA,SAASG,YAAYA,CAACC,OAAO,EAAE;EAC7B,MAAMC,aAAa,GAAGT,WAAW,CAACQ,OAAO,EAAE,SAAS,CAAC;EACrD,MAAME,aAAa,GAAGV,WAAW,CAACQ,OAAO,EAAE,SAAS,CAAC;EAErD,OAAOC,aAAa,GAAGC,aAAa,GAAG,SAAS,GAAG,SAAS;AAC9D;AAEA,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC7B,OAAOL,YAAY,CAACK,KAAK,CAAC;AAC9B,CAAC;AAED,eAAeD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}