{"ast":null,"code":"var inherits = require('inherits');\nvar Reporter = require('../base').Reporter;\nvar Buffer = require('buffer').Buffer;\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\nDecoderBuffer.prototype.save = function save() {\n  return {\n    offset: this.offset,\n    reporter: Reporter.prototype.save.call(this)\n  };\n};\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  var res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n  return res;\n};\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length) return this.base.readUInt8(this.offset++, true);else return this.error(fail || 'DecoderBuffer overrun');\n};\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length)) return this.error(fail || 'DecoderBuffer overrun');\n  var res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n};\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n};\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function (item) {\n      if (!(item instanceof EncoderBuffer)) item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff)) return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out) out = new Buffer(this.length);\n  if (!offset) offset = 0;\n  if (this.length === 0) return out;\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function (item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number') out[offset] = this.value;else if (typeof this.value === 'string') out.write(this.value, offset);else if (Buffer.isBuffer(this.value)) this.value.copy(out, offset);\n    offset += this.length;\n  }\n  return out;\n};","map":{"version":3,"names":["inherits","require","Reporter","Buffer","DecoderBuffer","base","options","call","isBuffer","error","offset","length","exports","prototype","save","reporter","restore","res","isEmpty","readUInt8","fail","skip","bytes","_reporterState","raw","slice","EncoderBuffer","value","Array","isArray","map","item","byteLength","join","out","forEach","write","copy"],"sources":["/app/node_modules/asn1.js/lib/asn1/base/buffer.js"],"sourcesContent":["var inherits = require('inherits');\nvar Reporter = require('../base').Reporter;\nvar Buffer = require('buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  var res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n}\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  var res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n}\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n}\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!(item instanceof EncoderBuffer))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = new Buffer(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}