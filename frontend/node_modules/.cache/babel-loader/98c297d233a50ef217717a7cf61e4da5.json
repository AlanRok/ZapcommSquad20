{"ast":null,"code":"'use strict';\n\nvar asn1 = require('./asn1');\nvar aesid = require('./aesid.json');\nvar fixProc = require('./fixProc');\nvar ciphers = require('browserify-aes');\nvar compat = require('pbkdf2');\nvar Buffer = require('safe-buffer').Buffer;\nfunction decrypt(data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt;\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')];\n  var iv = data.algorithm.decrypt.cipher.iv;\n  var cipherText = data.subjectPrivateKey;\n  var keylen = parseInt(algo.split('-')[1], 10) / 8;\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1');\n  var cipher = ciphers.createDecipheriv(algo, key, iv);\n  var out = [];\n  out.push(cipher.update(cipherText));\n  out.push(cipher['final']());\n  return Buffer.concat(out);\n}\nfunction parseKeys(buffer) {\n  var password;\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase;\n    buffer = buffer.key;\n  }\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer);\n  }\n  var stripped = fixProc(buffer, password);\n  var type = stripped.tag;\n  var data = stripped.data;\n  var subtype, ndata;\n  switch (type) {\n    case 'CERTIFICATE':\n      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo;\n    // falls through\n    case 'PUBLIC KEY':\n      if (!ndata) {\n        ndata = asn1.PublicKey.decode(data, 'der');\n      }\n      subtype = ndata.algorithm.algorithm.join('.');\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der');\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey;\n          return {\n            type: 'ec',\n            data: ndata\n          };\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der');\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          };\n        default:\n          throw new Error('unknown key id ' + subtype);\n      }\n    // throw new Error('unknown key type ' + type)\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der');\n      data = decrypt(data, password);\n    // falls through\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der');\n      subtype = ndata.algorithm.algorithm.join('.');\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der');\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          };\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der');\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          };\n        default:\n          throw new Error('unknown key id ' + subtype);\n      }\n    // throw new Error('unknown key type ' + type)\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der');\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der');\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      };\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der');\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      };\n    default:\n      throw new Error('unknown key type ' + type);\n  }\n}\nparseKeys.signature = asn1.signature;\nmodule.exports = parseKeys;","map":{"version":3,"names":["asn1","require","aesid","fixProc","ciphers","compat","Buffer","decrypt","data","password","salt","algorithm","kde","kdeparams","iters","parseInt","toString","algo","cipher","join","iv","cipherText","subjectPrivateKey","keylen","split","key","pbkdf2Sync","createDecipheriv","out","push","update","concat","parseKeys","buffer","isBuffer","passphrase","from","stripped","type","tag","subtype","ndata","certificate","decode","tbsCertificate","subjectPublicKeyInfo","PublicKey","RSAPublicKey","subjectPublicKey","params","pub_key","DSAparam","Error","EncryptedPrivateKey","PrivateKey","RSAPrivateKey","curve","privateKey","ECPrivateKey","priv_key","DSAPrivateKey","parameters","value","signature","module","exports"],"sources":["/app/node_modules/parse-asn1/index.js"],"sourcesContent":["'use strict';\n\nvar asn1 = require('./asn1');\nvar aesid = require('./aesid.json');\nvar fixProc = require('./fixProc');\nvar ciphers = require('browserify-aes');\nvar compat = require('pbkdf2');\nvar Buffer = require('safe-buffer').Buffer;\n\nfunction decrypt(data, password) {\n\tvar salt = data.algorithm.decrypt.kde.kdeparams.salt;\n\tvar iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);\n\tvar algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')];\n\tvar iv = data.algorithm.decrypt.cipher.iv;\n\tvar cipherText = data.subjectPrivateKey;\n\tvar keylen = parseInt(algo.split('-')[1], 10) / 8;\n\tvar key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1');\n\tvar cipher = ciphers.createDecipheriv(algo, key, iv);\n\tvar out = [];\n\tout.push(cipher.update(cipherText));\n\tout.push(cipher['final']());\n\treturn Buffer.concat(out);\n}\n\nfunction parseKeys(buffer) {\n\tvar password;\n\tif (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n\t\tpassword = buffer.passphrase;\n\t\tbuffer = buffer.key;\n\t}\n\tif (typeof buffer === 'string') {\n\t\tbuffer = Buffer.from(buffer);\n\t}\n\n\tvar stripped = fixProc(buffer, password);\n\n\tvar type = stripped.tag;\n\tvar data = stripped.data;\n\tvar subtype, ndata;\n\tswitch (type) {\n\t\tcase 'CERTIFICATE':\n\t\t\tndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo;\n\t\t\t// falls through\n\t\tcase 'PUBLIC KEY':\n\t\t\tif (!ndata) {\n\t\t\t\tndata = asn1.PublicKey.decode(data, 'der');\n\t\t\t}\n\t\t\tsubtype = ndata.algorithm.algorithm.join('.');\n\t\t\tswitch (subtype) {\n\t\t\t\tcase '1.2.840.113549.1.1.1':\n\t\t\t\t\treturn asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der');\n\t\t\t\tcase '1.2.840.10045.2.1':\n\t\t\t\t\tndata.subjectPrivateKey = ndata.subjectPublicKey;\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'ec',\n\t\t\t\t\t\tdata: ndata\n\t\t\t\t\t};\n\t\t\t\tcase '1.2.840.10040.4.1':\n\t\t\t\t\tndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der');\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'dsa',\n\t\t\t\t\t\tdata: ndata.algorithm.params\n\t\t\t\t\t};\n\t\t\t\tdefault: throw new Error('unknown key id ' + subtype);\n\t\t\t}\n\t\t\t// throw new Error('unknown key type ' + type)\n\t\tcase 'ENCRYPTED PRIVATE KEY':\n\t\t\tdata = asn1.EncryptedPrivateKey.decode(data, 'der');\n\t\t\tdata = decrypt(data, password);\n\t\t\t// falls through\n\t\tcase 'PRIVATE KEY':\n\t\t\tndata = asn1.PrivateKey.decode(data, 'der');\n\t\t\tsubtype = ndata.algorithm.algorithm.join('.');\n\t\t\tswitch (subtype) {\n\t\t\t\tcase '1.2.840.113549.1.1.1':\n\t\t\t\t\treturn asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der');\n\t\t\t\tcase '1.2.840.10045.2.1':\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcurve: ndata.algorithm.curve,\n\t\t\t\t\t\tprivateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n\t\t\t\t\t};\n\t\t\t\tcase '1.2.840.10040.4.1':\n\t\t\t\t\tndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der');\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'dsa',\n\t\t\t\t\t\tparams: ndata.algorithm.params\n\t\t\t\t\t};\n\t\t\t\tdefault: throw new Error('unknown key id ' + subtype);\n\t\t\t}\n\t\t\t// throw new Error('unknown key type ' + type)\n\t\tcase 'RSA PUBLIC KEY':\n\t\t\treturn asn1.RSAPublicKey.decode(data, 'der');\n\t\tcase 'RSA PRIVATE KEY':\n\t\t\treturn asn1.RSAPrivateKey.decode(data, 'der');\n\t\tcase 'DSA PRIVATE KEY':\n\t\t\treturn {\n\t\t\t\ttype: 'dsa',\n\t\t\t\tparams: asn1.DSAPrivateKey.decode(data, 'der')\n\t\t\t};\n\t\tcase 'EC PRIVATE KEY':\n\t\t\tdata = asn1.ECPrivateKey.decode(data, 'der');\n\t\t\treturn {\n\t\t\t\tcurve: data.parameters.value,\n\t\t\t\tprivateKey: data.privateKey\n\t\t\t};\n\t\tdefault: throw new Error('unknown key type ' + type);\n\t}\n}\nparseKeys.signature = asn1.signature;\n\nmodule.exports = parseKeys;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}