{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\nconst useMessages = ({\n  fromMe,\n  dateStart,\n  dateEnd\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchMessages = async () => {\n        try {\n          const {\n            data\n          } = await api.get(\"/messages-allMe\", {\n            params: {\n              fromMe,\n              dateStart,\n              dateEnd\n            }\n          });\n          setCount(data.count[0].count);\n          setLoading(false);\n        } catch (err) {\n          setLoading(false);\n          toastError(err);\n        }\n      };\n      fetchMessages();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [dateStart, dateEnd]);\n  return {\n    count\n  };\n};\nexport default useMessages;","map":{"version":3,"names":["useState","useEffect","toastError","api","useMessages","fromMe","dateStart","dateEnd","loading","setLoading","count","setCount","delayDebounceFn","setTimeout","fetchMessages","data","get","params","err","clearTimeout"],"sources":["/app/src/hooks/useMessages/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport toastError from \"../../errors/toastError\";\n\nimport api from \"../../services/api\";\n\nconst useMessages = ({ fromMe, dateStart, dateEnd }) => {\n    const [loading, setLoading] = useState(true);\n    const [count, setCount] = useState(0);\n\n    useEffect(() => {\n        setLoading(true);\n        const delayDebounceFn = setTimeout(() => {\n            const fetchMessages = async () => {\n                try {\n                    const { data } = await api.get(\"/messages-allMe\", {\n                        params: {\n                            fromMe,\n                            dateStart,\n                            dateEnd,\n                        },\n                    });\n                    setCount(data.count[0].count);\n                    setLoading(false);\n                } catch (err) {\n                    setLoading(false);\n                    toastError(err);\n                }\n            };\n\n            fetchMessages();\n        }, 500);\n        return () => clearTimeout(delayDebounceFn);\n    }, [dateStart, dateEnd]);\n\n    return { count };\n};\n\nexport default useMessages;\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,yBAAyB;AAEhD,OAAOC,GAAG,MAAM,oBAAoB;AAEpC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM;EAAEC,SAAS;EAAEC;AAAQ,CAAC,KAAK;EACpD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAErCC,SAAS,CAAC,MAAM;IACZQ,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMG,eAAe,GAAGC,UAAU,CAAC,MAAM;MACrC,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;QAC9B,IAAI;UACA,MAAM;YAAEC;UAAK,CAAC,GAAG,MAAMZ,GAAG,CAACa,GAAG,CAAC,iBAAiB,EAAE;YAC9CC,MAAM,EAAE;cACJZ,MAAM;cACNC,SAAS;cACTC;YACJ;UACJ,CAAC,CAAC;UACFI,QAAQ,CAACI,IAAI,CAACL,KAAK,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC;UAC7BD,UAAU,CAAC,KAAK,CAAC;QACrB,CAAC,CAAC,OAAOS,GAAG,EAAE;UACVT,UAAU,CAAC,KAAK,CAAC;UACjBP,UAAU,CAACgB,GAAG,CAAC;QACnB;MACJ,CAAC;MAEDJ,aAAa,CAAC,CAAC;IACnB,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAMK,YAAY,CAACP,eAAe,CAAC;EAC9C,CAAC,EAAE,CAACN,SAAS,EAAEC,OAAO,CAAC,CAAC;EAExB,OAAO;IAAEG;EAAM,CAAC;AACpB,CAAC;AAED,eAAeN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}