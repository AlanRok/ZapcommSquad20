{"ast":null,"code":"import React__default, { useEffect } from 'react';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction useOnMount(callback) {\n  useEffect(callback, []);\n}\nfunction useSound(src, _ref) {\n  if (_ref === void 0) {\n    _ref = {};\n  }\n  var _ref2 = _ref,\n    _ref2$volume = _ref2.volume,\n    volume = _ref2$volume === void 0 ? 1 : _ref2$volume,\n    _ref2$playbackRate = _ref2.playbackRate,\n    playbackRate = _ref2$playbackRate === void 0 ? 1 : _ref2$playbackRate,\n    _ref2$soundEnabled = _ref2.soundEnabled,\n    soundEnabled = _ref2$soundEnabled === void 0 ? true : _ref2$soundEnabled,\n    _ref2$interrupt = _ref2.interrupt,\n    interrupt = _ref2$interrupt === void 0 ? false : _ref2$interrupt,\n    onload = _ref2.onload,\n    delegated = _objectWithoutPropertiesLoose(_ref2, [\"volume\", \"playbackRate\", \"soundEnabled\", \"interrupt\", \"onload\"]);\n  var HowlConstructor = React__default.useRef(null);\n  var isMounted = React__default.useRef(false);\n  var _React$useState = React__default.useState(false),\n    isPlaying = _React$useState[0],\n    setIsPlaying = _React$useState[1];\n  var _React$useState2 = React__default.useState(null),\n    duration = _React$useState2[0],\n    setDuration = _React$useState2[1];\n  var _React$useState3 = React__default.useState(null),\n    sound = _React$useState3[0],\n    setSound = _React$useState3[1];\n  var handleLoad = function handleLoad() {\n    if (typeof onload === 'function') {\n      // @ts-ignore\n      onload.call(this);\n    }\n    if (isMounted.current) {\n      // @ts-ignore\n      setDuration(this.duration() * 1000);\n    }\n  }; // We want to lazy-load Howler, since sounds can't play on load anyway.\n\n  useOnMount(function () {\n    import('howler').then(function (mod) {\n      if (!isMounted.current) {\n        HowlConstructor.current = mod.Howl;\n        isMounted.current = true;\n        var _sound = new HowlConstructor.current(_extends({\n          src: Array.isArray(src) ? src : [src],\n          volume: volume,\n          rate: playbackRate,\n          onload: handleLoad\n        }, delegated));\n        setSound(_sound);\n      }\n    });\n    return function () {\n      isMounted.current = false;\n    };\n  }); // When the `src` changes, we have to do a whole thing where we recreate\n  // the Howl instance. This is because Howler doesn't expose a way to\n  // tweak the sound\n\n  React__default.useEffect(function () {\n    if (HowlConstructor.current && sound) {\n      setSound(new HowlConstructor.current(_extends({\n        src: Array.isArray(src) ? src : [src],\n        volume: volume,\n        onload: handleLoad\n      }, delegated)));\n    } // The linter wants to run this effect whenever ANYTHING changes,\n    // but very specifically I only want to recreate the Howl instance\n    // when the `src` changes. Other changes should have no effect.\n    // Passing array to the useEffect dependencies list will result in\n    // ifinite loop so we need to stringify it, for more details check\n    // https://github.com/facebook/react/issues/14476#issuecomment-471199055\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(src)]); // Whenever volume/playbackRate are changed, change those properties\n  // on the sound instance.\n\n  React__default.useEffect(function () {\n    if (sound) {\n      sound.volume(volume);\n      sound.rate(playbackRate);\n    } // A weird bug means that including the `sound` here can trigger an\n    // error on unmount, where the state loses track of the sprites??\n    // No idea, but anyway I don't need to re-run this if only the `sound`\n    // changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [volume, playbackRate]);\n  var play = React__default.useCallback(function (options) {\n    if (typeof options === 'undefined') {\n      options = {};\n    }\n    if (!sound || !soundEnabled && !options.forceSoundEnabled) {\n      return;\n    }\n    if (interrupt) {\n      sound.stop();\n    }\n    if (options.playbackRate) {\n      sound.rate(options.playbackRate);\n    }\n    sound.play(options.id);\n    if (isMounted.current) {\n      sound.once('end', function () {\n        // If sound is not looping\n        if (!sound.playing()) {\n          setIsPlaying(false);\n        }\n      });\n    }\n    if (isMounted.current) {\n      setIsPlaying(true);\n    }\n  }, [sound, soundEnabled, interrupt]);\n  var stop = React__default.useCallback(function (id) {\n    if (!sound) {\n      return;\n    }\n    sound.stop(id);\n    if (isMounted.current) {\n      setIsPlaying(false);\n    }\n  }, [sound]);\n  var pause = React__default.useCallback(function (id) {\n    if (!sound) {\n      return;\n    }\n    sound.pause(id);\n    if (isMounted.current) {\n      setIsPlaying(false);\n    }\n  }, [sound]);\n  var returnedValue = [play, {\n    sound: sound,\n    stop: stop,\n    pause: pause,\n    isPlaying: isPlaying,\n    duration: duration\n  }];\n  return returnedValue;\n}\nexport default useSound;\nexport { useSound };","map":{"version":3,"names":["useOnMount","callback","useEffect","useSound","src","_ref","volume","_ref2$volume","playbackRate","_ref2$playbackRate","soundEnabled","_ref2$soundEnabled","interrupt","_ref2$interrupt","onload","_ref2","delegated","_objectWithoutPropertiesLoose","HowlConstructor","React__default","useRef","isMounted","useState","isPlaying","_React$useState","setIsPlaying","duration","_React$useState2","setDuration","sound","_React$useState3","setSound","handleLoad","call","current","then","mod","Howl","_sound","_extends","Array","isArray","rate","JSON","stringify","play","useCallback","options","forceSoundEnabled","stop","id","once","playing","pause","returnedValue"],"sources":["../src/use-on-mount.ts","../src/index.ts"],"sourcesContent":["import * as React from 'react';\n\nexport default function useOnMount(callback: React.EffectCallback) {\n  React.useEffect(callback, []);\n}\n","import React from 'react';\n\nimport useOnMount from './use-on-mount';\n\nimport { HookOptions, PlayOptions, PlayFunction, ReturnedValue } from './types';\n\nexport default function useSound<T = any>(\n  src: string | string[],\n  {\n    volume = 1,\n    playbackRate = 1,\n    soundEnabled = true,\n    interrupt = false,\n    onload,\n    ...delegated\n  }: HookOptions<T> = {} as HookOptions\n) {\n  const HowlConstructor = React.useRef<HowlStatic | null>(null);\n  const isMounted = React.useRef(false);\n\n  const [isPlaying, setIsPlaying] = React.useState(false);\n  const [duration, setDuration] = React.useState<number | null>(null);\n\n  const [sound, setSound] = React.useState<Howl | null>(null);\n\n  const handleLoad = function() {\n    if (typeof onload === 'function') {\n      // @ts-ignore\n      onload.call(this);\n    }\n\n    if (isMounted.current) {\n      // @ts-ignore\n      setDuration(this.duration() * 1000);\n    }\n  };\n\n  // We want to lazy-load Howler, since sounds can't play on load anyway.\n  useOnMount(() => {\n    import('howler').then(mod => {\n      if (!isMounted.current) {\n        HowlConstructor.current = mod.Howl;\n        isMounted.current = true;\n\n        const sound = new HowlConstructor.current({\n          src: Array.isArray(src) ? src : [src],\n          volume,\n          rate: playbackRate,\n          onload: handleLoad,\n          ...delegated,\n        });\n\n        setSound(sound);\n      }\n    });\n\n    return () => {\n      isMounted.current = false;\n    };\n  });\n\n  // When the `src` changes, we have to do a whole thing where we recreate\n  // the Howl instance. This is because Howler doesn't expose a way to\n  // tweak the sound\n  React.useEffect(() => {\n    if (HowlConstructor.current && sound) {\n      setSound(\n        new HowlConstructor.current({\n          src: Array.isArray(src) ? src : [src],\n          volume,\n          onload: handleLoad,\n          ...delegated,\n        })\n      );\n    }\n    // The linter wants to run this effect whenever ANYTHING changes,\n    // but very specifically I only want to recreate the Howl instance\n    // when the `src` changes. Other changes should have no effect.\n    // Passing array to the useEffect dependencies list will result in\n    // ifinite loop so we need to stringify it, for more details check\n    // https://github.com/facebook/react/issues/14476#issuecomment-471199055\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(src)]);\n\n  // Whenever volume/playbackRate are changed, change those properties\n  // on the sound instance.\n  React.useEffect(() => {\n    if (sound) {\n      sound.volume(volume);\n      sound.rate(playbackRate);\n    }\n    // A weird bug means that including the `sound` here can trigger an\n    // error on unmount, where the state loses track of the sprites??\n    // No idea, but anyway I don't need to re-run this if only the `sound`\n    // changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [volume, playbackRate]);\n\n  const play: PlayFunction = React.useCallback(\n    (options?: PlayOptions) => {\n      if (typeof options === 'undefined') {\n        options = {};\n      }\n\n      if (!sound || (!soundEnabled && !options.forceSoundEnabled)) {\n        return;\n      }\n\n      if (interrupt) {\n        sound.stop();\n      }\n\n      if (options.playbackRate) {\n        sound.rate(options.playbackRate);\n      }\n\n      sound.play(options.id);\n\n      if (isMounted.current) {\n        sound.once('end', () => {\n          // If sound is not looping\n          if (!sound.playing()) {\n            setIsPlaying(false);\n          }\n        });\n      }\n\n      if (isMounted.current) {\n        setIsPlaying(true);\n      }\n    },\n    [sound, soundEnabled, interrupt]\n  );\n\n  const stop = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.stop(id);\n\n      if (isMounted.current) {\n        setIsPlaying(false);\n      }\n    },\n    [sound]\n  );\n\n  const pause = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.pause(id);\n\n      if (isMounted.current) {\n        setIsPlaying(false);\n      }\n    },\n    [sound]\n  );\n\n  const returnedValue: ReturnedValue = [\n    play,\n    {\n      sound,\n      stop,\n      pause,\n      isPlaying,\n      duration,\n    },\n  ];\n\n  return returnedValue;\n}\n\nexport { useSound };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}