{"ast":null,"code":"var _jsxFileName = \"/app/src/pages/Dashboard/ChartsUser.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport brLocale from 'date-fns/locale/pt-BR';\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers';\nimport { Button, Stack, TextField } from '@mui/material';\nimport Typography from \"@material-ui/core/Typography\";\nimport api from '../../services/api';\nimport { format } from 'date-fns';\nimport { toast } from 'react-toastify';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport './button.css';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.padding,\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(2)\n  }\n}));\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ChartDataLabels);\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top',\n      display: false\n    },\n    title: {\n      display: true,\n      position: 'left'\n    },\n    datalabels: {\n      display: true,\n      anchor: 'start',\n      offset: -30,\n      align: \"start\",\n      color: \"#fff\",\n      textStrokeColor: \"#000\",\n      textStrokeWidth: 2,\n      font: {\n        size: 20,\n        weight: \"bold\"\n      }\n    }\n  }\n};\nexport const ChatsUser = () => {\n  // const classes = useStyles();\n  const [initialDate, setInitialDate] = useState(new Date());\n  const [finalDate, setFinalDate] = useState(new Date());\n  const [ticketsData, setTicketsData] = useState({\n    data: []\n  });\n  const companyId = localStorage.getItem(\"companyId\");\n  useEffect(() => {\n    handleGetTicketsInformation();\n  }, []);\n  const dataCharts = {\n    labels: ticketsData && (ticketsData === null || ticketsData === void 0 ? void 0 : ticketsData.data.length) > 0 && (ticketsData === null || ticketsData === void 0 ? void 0 : ticketsData.data.map(item => item.nome)),\n    datasets: [{\n      data: (ticketsData === null || ticketsData === void 0 ? void 0 : ticketsData.data.length) > 0 && (ticketsData === null || ticketsData === void 0 ? void 0 : ticketsData.data.map((item, index) => {\n        return item.quantidade;\n      })),\n      backgroundColor: '#2DDD7F'\n    }]\n  };\n  const handleGetTicketsInformation = async () => {\n    try {\n      const {\n        data\n      } = await api.get(`/dashboard/ticketsUsers?initialDate=${format(initialDate, 'yyyy-MM-dd')}&finalDate=${format(finalDate, 'yyyy-MM-dd')}&companyId=${companyId}`);\n      setTicketsData(data);\n    } catch (error) {\n      toast.error('Erro ao obter informações da conversa');\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\",\n    color: \"#000000\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Quantidade de Chamados\"), /*#__PURE__*/React.createElement(Stack, {\n    direction: 'row',\n    spacing: 2,\n    alignItems: 'center',\n    sx: {\n      my: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    adapterLocale: brLocale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    value: initialDate,\n    onChange: newValue => {\n      setInitialDate(newValue);\n    },\n    label: \"Inicio\",\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({\n      fullWidth: true\n    }, params, {\n      sx: {\n        width: '20ch'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 50\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    adapterLocale: brLocale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    value: finalDate,\n    onChange: newValue => {\n      setFinalDate(newValue);\n    },\n    label: \"Fim\",\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({\n      fullWidth: true\n    }, params, {\n      sx: {\n        width: '20ch'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 50\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"buttonHover\",\n    onClick: handleGetTicketsInformation,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"Filtrar\")), /*#__PURE__*/React.createElement(Bar, {\n    options: options,\n    data: dataCharts,\n    style: {\n      maxWidth: '100%',\n      maxHeight: '280px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"names":["React","useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","ChartDataLabels","AdapterDateFns","brLocale","DatePicker","LocalizationProvider","Button","Stack","TextField","Typography","api","format","toast","makeStyles","useStyles","theme","container","paddingTop","spacing","paddingBottom","padding","paddingLeft","paddingRight","register","options","responsive","plugins","legend","position","display","title","datalabels","anchor","offset","align","color","textStrokeColor","textStrokeWidth","font","size","weight","ChatsUser","initialDate","setInitialDate","Date","finalDate","setFinalDate","ticketsData","setTicketsData","data","companyId","localStorage","getItem","handleGetTicketsInformation","dataCharts","labels","length","map","item","nome","datasets","index","quantidade","backgroundColor","get","error","createElement","Fragment","component","variant","gutterBottom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","direction","alignItems","sx","my","dateAdapter","adapterLocale","value","onChange","newValue","label","renderInput","params","Object","assign","fullWidth","width","className","onClick","style","maxWidth","maxHeight"],"sources":["/app/src/pages/Dashboard/ChartsUser.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport brLocale from 'date-fns/locale/pt-BR';\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers';\nimport { Button, Stack, TextField } from '@mui/material';\nimport Typography from \"@material-ui/core/Typography\";\nimport api from '../../services/api';\nimport { format } from 'date-fns';\nimport { toast } from 'react-toastify';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport './button.css';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.padding,\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(2),\n    }\n}));\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n    ChartDataLabels\n);\n\nexport const options = {\n    responsive: true,\n    plugins: {\n        legend: {\n            position: 'top',\n            display: false,\n        },\n        title: {\n            display: true,\n            position: 'left',\n        },\n        datalabels: {\n            display: true,\n            anchor: 'start',\n            offset: -30,\n            align: \"start\",\n            color: \"#fff\",\n            textStrokeColor: \"#000\",\n            textStrokeWidth: 2,\n            font: {\n                size: 20,\n                weight: \"bold\"\n\n            },\n        }\n    },\n};\n\nexport const ChatsUser = () => {\n    // const classes = useStyles();\n    const [initialDate, setInitialDate] = useState(new Date());\n    const [finalDate, setFinalDate] = useState(new Date());\n    const [ticketsData, setTicketsData] = useState({ data: [] });\n\n    const companyId = localStorage.getItem(\"companyId\");\n\n    useEffect(() => {\n        handleGetTicketsInformation();\n    }, []);\n\n    const dataCharts = {\n\n        labels: ticketsData && ticketsData?.data.length > 0 && ticketsData?.data.map((item) => item.nome),\n        datasets: [\n            {\n                data: ticketsData?.data.length > 0 && ticketsData?.data.map((item, index) => {\n                    return item.quantidade\n                }),\n                backgroundColor: '#2DDD7F',\n            },\n\n        ],\n    };\n\n    const handleGetTicketsInformation = async () => {\n        try {\n\n            const { data } = await api.get(`/dashboard/ticketsUsers?initialDate=${format(initialDate, 'yyyy-MM-dd')}&finalDate=${format(finalDate, 'yyyy-MM-dd')}&companyId=${companyId}`);\n            setTicketsData(data);\n        } catch (error) {\n            toast.error('Erro ao obter informações da conversa');\n        }\n    }\n\n    return (\n        <>\n            <Typography component=\"h2\" variant=\"h6\" color=\"#000000\" gutterBottom>\n                Quantidade de Chamados\n            </Typography>\n\n            <Stack direction={'row'} spacing={2} alignItems={'center'} sx={{ my: 2, }} >\n\n                <LocalizationProvider dateAdapter={AdapterDateFns} adapterLocale={brLocale}>\n                    <DatePicker\n                        value={initialDate}\n                        onChange={(newValue) => { setInitialDate(newValue) }}\n                        label=\"Inicio\"\n                        renderInput={(params) => <TextField fullWidth {...params} sx={{ width: '20ch' }} />}\n\n                    />\n                </LocalizationProvider>\n\n                <LocalizationProvider dateAdapter={AdapterDateFns} adapterLocale={brLocale}>\n                    <DatePicker\n                        value={finalDate}\n                        onChange={(newValue) => { setFinalDate(newValue) }}\n                        label=\"Fim\"\n                        renderInput={(params) => <TextField fullWidth {...params} sx={{ width: '20ch' }} />}\n                    />\n                </LocalizationProvider>\n\n                <Button className=\"buttonHover\" onClick={handleGetTicketsInformation} variant='contained'>Filtrar</Button>\n\n            </Stack>\n            <Bar options={options} data={dataCharts} style={{ maxWidth: '100%', maxHeight: '280px', }} />\n        </>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}