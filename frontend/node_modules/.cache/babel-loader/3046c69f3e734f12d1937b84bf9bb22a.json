{"ast":null,"code":"var _String = String;\nexport default _String.fromCodePoint || function stringFromCodePoint() {\n  var MAX_SIZE = 0x4000;\n  var codeUnits = [];\n  var highSurrogate;\n  var lowSurrogate;\n  var index = -1;\n  var length = arguments.length;\n  if (!length) {\n    return '';\n  }\n  var result = '';\n  while (++index < length) {\n    var codePoint = Number(arguments[index]);\n    if (!isFinite(codePoint) ||\n    // `NaN`, `+Infinity`, or `-Infinity`\n    codePoint < 0 ||\n    // not a valid Unicode code point\n    codePoint > 0x10ffff ||\n    // not a valid Unicode code point\n    Math.floor(codePoint) != codePoint // not an integer\n    ) {\n      throw RangeError('Invalid code point: ' + codePoint);\n    }\n    if (codePoint <= 0xffff) {\n      // BMP code point\n      codeUnits.push(codePoint);\n    } else {\n      // Astral code point; split in surrogate halves\n      // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      codePoint -= 0x10000;\n      highSurrogate = (codePoint >> 10) + 0xd800;\n      lowSurrogate = codePoint % 0x400 + 0xdc00;\n      codeUnits.push(highSurrogate, lowSurrogate);\n    }\n    if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n      result += String.fromCharCode.apply(null, codeUnits);\n      codeUnits.length = 0;\n    }\n  }\n  return result;\n};","map":{"version":3,"names":["_String","String","fromCodePoint","stringFromCodePoint","MAX_SIZE","codeUnits","highSurrogate","lowSurrogate","index","length","arguments","result","codePoint","Number","isFinite","Math","floor","RangeError","push","fromCharCode","apply"],"sources":["/app/node_modules/emoji-mart/dist-es/polyfills/stringFromCodePoint.js"],"sourcesContent":["var _String = String;\nexport default _String.fromCodePoint || function stringFromCodePoint() {\n  var MAX_SIZE = 0x4000;\n  var codeUnits = [];\n  var highSurrogate;\n  var lowSurrogate;\n  var index = -1;\n  var length = arguments.length;\n\n  if (!length) {\n    return '';\n  }\n\n  var result = '';\n\n  while (++index < length) {\n    var codePoint = Number(arguments[index]);\n\n    if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n    codePoint < 0 || // not a valid Unicode code point\n    codePoint > 0x10ffff || // not a valid Unicode code point\n    Math.floor(codePoint) != codePoint // not an integer\n    ) {\n        throw RangeError('Invalid code point: ' + codePoint);\n      }\n\n    if (codePoint <= 0xffff) {\n      // BMP code point\n      codeUnits.push(codePoint);\n    } else {\n      // Astral code point; split in surrogate halves\n      // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      codePoint -= 0x10000;\n      highSurrogate = (codePoint >> 10) + 0xd800;\n      lowSurrogate = codePoint % 0x400 + 0xdc00;\n      codeUnits.push(highSurrogate, lowSurrogate);\n    }\n\n    if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n      result += String.fromCharCode.apply(null, codeUnits);\n      codeUnits.length = 0;\n    }\n  }\n\n  return result;\n};"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,MAAM;AACpB,eAAeD,OAAO,CAACE,aAAa,IAAI,SAASC,mBAAmBA,CAAA,EAAG;EACrE,IAAIC,QAAQ,GAAG,MAAM;EACrB,IAAIC,SAAS,GAAG,EAAE;EAClB,IAAIC,aAAa;EACjB,IAAIC,YAAY;EAChB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,IAAIC,MAAM,GAAGC,SAAS,CAACD,MAAM;EAE7B,IAAI,CAACA,MAAM,EAAE;IACX,OAAO,EAAE;EACX;EAEA,IAAIE,MAAM,GAAG,EAAE;EAEf,OAAO,EAAEH,KAAK,GAAGC,MAAM,EAAE;IACvB,IAAIG,SAAS,GAAGC,MAAM,CAACH,SAAS,CAACF,KAAK,CAAC,CAAC;IAExC,IAAI,CAACM,QAAQ,CAACF,SAAS,CAAC;IAAI;IAC5BA,SAAS,GAAG,CAAC;IAAI;IACjBA,SAAS,GAAG,QAAQ;IAAI;IACxBG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,IAAIA,SAAS,CAAC;IAAA,EACjC;MACE,MAAMK,UAAU,CAAC,sBAAsB,GAAGL,SAAS,CAAC;IACtD;IAEF,IAAIA,SAAS,IAAI,MAAM,EAAE;MACvB;MACAP,SAAS,CAACa,IAAI,CAACN,SAAS,CAAC;IAC3B,CAAC,MAAM;MACL;MACA;MACAA,SAAS,IAAI,OAAO;MACpBN,aAAa,GAAG,CAACM,SAAS,IAAI,EAAE,IAAI,MAAM;MAC1CL,YAAY,GAAGK,SAAS,GAAG,KAAK,GAAG,MAAM;MACzCP,SAAS,CAACa,IAAI,CAACZ,aAAa,EAAEC,YAAY,CAAC;IAC7C;IAEA,IAAIC,KAAK,GAAG,CAAC,KAAKC,MAAM,IAAIJ,SAAS,CAACI,MAAM,GAAGL,QAAQ,EAAE;MACvDO,MAAM,IAAIV,MAAM,CAACkB,YAAY,CAACC,KAAK,CAAC,IAAI,EAAEf,SAAS,CAAC;MACpDA,SAAS,CAACI,MAAM,GAAG,CAAC;IACtB;EACF;EAEA,OAAOE,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}