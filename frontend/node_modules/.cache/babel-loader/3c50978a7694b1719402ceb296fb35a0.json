{"ast":null,"code":"var _jsxFileName = \"/app/src/components/NotificationsVolume/index.js\";\nimport React, { useState, useRef } from \"react\";\nimport Popover from \"@material-ui/core/Popover\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport { Grid, Slider } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  tabContainer: {\n    padding: theme.spacing(2)\n  },\n  popoverPaper: {\n    width: \"100%\",\n    maxWidth: 350,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: 270\n    }\n  },\n  noShadow: {\n    boxShadow: \"none !important\"\n  },\n  icons: {\n    color: \"#fff\"\n  },\n  customBadge: {\n    backgroundColor: \"#f44336\",\n    color: \"#fff\"\n  }\n}));\nconst NotificationsVolume = ({\n  volume,\n  setVolume\n}) => {\n  const classes = useStyles();\n  const anchorEl = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleClick = () => {\n    setIsOpen(prevState => !prevState);\n  };\n  const handleClickAway = () => {\n    setIsOpen(false);\n  };\n  const handleVolumeChange = value => {\n    setVolume(value);\n    localStorage.setItem(\"volume\", value);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.icons,\n    onClick: handleClick,\n    ref: anchorEl,\n    \"aria-label\": \"Open Notifications\"\n    // color=\"inherit\"\n    // color=\"secondary\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(VolumeUpIcon, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Popover, {\n    disableScrollLock: true,\n    open: isOpen,\n    anchorEl: anchorEl.current,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"right\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    },\n    classes: {\n      paper: classes.popoverPaper\n    },\n    onClose: handleClickAway,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    className: classes.tabContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(VolumeDownIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: volume,\n    \"aria-labelledby\": \"continuous-slider\",\n    step: 0.1,\n    min: 0,\n    max: 1,\n    onChange: (e, value) => handleVolumeChange(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(VolumeUpIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }))))));\n};\nexport default NotificationsVolume;","map":{"version":3,"names":["React","useState","useRef","Popover","IconButton","List","makeStyles","VolumeUpIcon","VolumeDownIcon","Grid","Slider","useStyles","theme","tabContainer","padding","spacing","popoverPaper","width","maxWidth","marginLeft","marginRight","breakpoints","down","noShadow","boxShadow","icons","color","customBadge","backgroundColor","NotificationsVolume","volume","setVolume","classes","anchorEl","isOpen","setIsOpen","handleClick","prevState","handleClickAway","handleVolumeChange","value","localStorage","setItem","createElement","Fragment","className","onClick","ref","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","disableScrollLock","open","current","anchorOrigin","vertical","horizontal","transformOrigin","paper","onClose","dense","container","item","xs","step","min","max","onChange","e"],"sources":["/app/src/components/NotificationsVolume/index.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\n\nimport Popover from \"@material-ui/core/Popover\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\n\nimport { Grid, Slider } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    tabContainer: {\n        padding: theme.spacing(2),\n    },\n    popoverPaper: {\n        width: \"100%\",\n        maxWidth: 350,\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(1),\n        [theme.breakpoints.down(\"sm\")]: {\n            maxWidth: 270,\n        },\n    },\n    noShadow: {\n        boxShadow: \"none !important\",\n    },\n    icons: {\n        color: \"#fff\",\n    },\n    customBadge: {\n        backgroundColor: \"#f44336\",\n        color: \"#fff\",\n    },\n}));\n\nconst NotificationsVolume = ({ volume, setVolume }) => {\n    const classes = useStyles();\n\n    const anchorEl = useRef();\n    const [isOpen, setIsOpen] = useState(false);\n\n    const handleClick = () => {\n        setIsOpen((prevState) => !prevState);\n    };\n\n    const handleClickAway = () => {\n        setIsOpen(false);\n    };\n\n    const handleVolumeChange = (value) => {\n        setVolume(value);\n        localStorage.setItem(\"volume\", value);\n    };\n\n    return (\n        <>\n            <IconButton\n                className={classes.icons}\n                onClick={handleClick}\n                ref={anchorEl}\n                aria-label=\"Open Notifications\"\n                // color=\"inherit\"\n                // color=\"secondary\"\n            >\n                <VolumeUpIcon color=\"inherit\" />\n            </IconButton>\n            <Popover\n                disableScrollLock\n                open={isOpen}\n                anchorEl={anchorEl.current}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\",\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                }}\n                classes={{ paper: classes.popoverPaper }}\n                onClose={handleClickAway}\n            >\n                <List dense className={classes.tabContainer}>\n                    <Grid container spacing={2}>\n                        <Grid item>\n                            <VolumeDownIcon />\n                        </Grid>\n                        <Grid item xs>\n                            <Slider\n                                value={volume}\n                                aria-labelledby=\"continuous-slider\"\n                                step={0.1}\n                                min={0}\n                                max={1}\n                                onChange={(e, value) =>\n                                    handleVolumeChange(value)\n                                }\n                            />\n                        </Grid>\n                        <Grid item>\n                            <VolumeUpIcon />\n                        </Grid>\n                    </Grid>\n                </List>\n            </Popover>\n        </>\n    );\n};\n\nexport default NotificationsVolume;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}