{"version":3,"file":"use-sound.esm.js","sources":["../src/use-on-mount.ts","../src/index.ts"],"sourcesContent":["import * as React from 'react';\n\nexport default function useOnMount(callback: React.EffectCallback) {\n  React.useEffect(callback, []);\n}\n","import React from 'react';\n\nimport useOnMount from './use-on-mount';\n\nimport { HookOptions, PlayOptions, PlayFunction, ReturnedValue } from './types';\n\nexport default function useSound<T = any>(\n  src: string | string[],\n  {\n    volume = 1,\n    playbackRate = 1,\n    soundEnabled = true,\n    interrupt = false,\n    onload,\n    ...delegated\n  }: HookOptions<T> = {} as HookOptions\n) {\n  const HowlConstructor = React.useRef<HowlStatic | null>(null);\n  const isMounted = React.useRef(false);\n\n  const [isPlaying, setIsPlaying] = React.useState(false);\n  const [duration, setDuration] = React.useState<number | null>(null);\n\n  const [sound, setSound] = React.useState<Howl | null>(null);\n\n  const handleLoad = function() {\n    if (typeof onload === 'function') {\n      // @ts-ignore\n      onload.call(this);\n    }\n\n    if (isMounted.current) {\n      // @ts-ignore\n      setDuration(this.duration() * 1000);\n    }\n  };\n\n  // We want to lazy-load Howler, since sounds can't play on load anyway.\n  useOnMount(() => {\n    import('howler').then(mod => {\n      if (!isMounted.current) {\n        HowlConstructor.current = mod.Howl;\n        isMounted.current = true;\n\n        const sound = new HowlConstructor.current({\n          src: Array.isArray(src) ? src : [src],\n          volume,\n          rate: playbackRate,\n          onload: handleLoad,\n          ...delegated,\n        });\n\n        setSound(sound);\n      }\n    });\n\n    return () => {\n      isMounted.current = false;\n    };\n  });\n\n  // When the `src` changes, we have to do a whole thing where we recreate\n  // the Howl instance. This is because Howler doesn't expose a way to\n  // tweak the sound\n  React.useEffect(() => {\n    if (HowlConstructor.current && sound) {\n      setSound(\n        new HowlConstructor.current({\n          src: Array.isArray(src) ? src : [src],\n          volume,\n          onload: handleLoad,\n          ...delegated,\n        })\n      );\n    }\n    // The linter wants to run this effect whenever ANYTHING changes,\n    // but very specifically I only want to recreate the Howl instance\n    // when the `src` changes. Other changes should have no effect.\n    // Passing array to the useEffect dependencies list will result in\n    // ifinite loop so we need to stringify it, for more details check\n    // https://github.com/facebook/react/issues/14476#issuecomment-471199055\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(src)]);\n\n  // Whenever volume/playbackRate are changed, change those properties\n  // on the sound instance.\n  React.useEffect(() => {\n    if (sound) {\n      sound.volume(volume);\n      sound.rate(playbackRate);\n    }\n    // A weird bug means that including the `sound` here can trigger an\n    // error on unmount, where the state loses track of the sprites??\n    // No idea, but anyway I don't need to re-run this if only the `sound`\n    // changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [volume, playbackRate]);\n\n  const play: PlayFunction = React.useCallback(\n    (options?: PlayOptions) => {\n      if (typeof options === 'undefined') {\n        options = {};\n      }\n\n      if (!sound || (!soundEnabled && !options.forceSoundEnabled)) {\n        return;\n      }\n\n      if (interrupt) {\n        sound.stop();\n      }\n\n      if (options.playbackRate) {\n        sound.rate(options.playbackRate);\n      }\n\n      sound.play(options.id);\n\n      if (isMounted.current) {\n        sound.once('end', () => {\n          // If sound is not looping\n          if (!sound.playing()) {\n            setIsPlaying(false);\n          }\n        });\n      }\n\n      if (isMounted.current) {\n        setIsPlaying(true);\n      }\n    },\n    [sound, soundEnabled, interrupt]\n  );\n\n  const stop = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.stop(id);\n\n      if (isMounted.current) {\n        setIsPlaying(false);\n      }\n    },\n    [sound]\n  );\n\n  const pause = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.pause(id);\n\n      if (isMounted.current) {\n        setIsPlaying(false);\n      }\n    },\n    [sound]\n  );\n\n  const returnedValue: ReturnedValue = [\n    play,\n    {\n      sound,\n      stop,\n      pause,\n      isPlaying,\n      duration,\n    },\n  ];\n\n  return returnedValue;\n}\n\nexport { useSound };\n"],"names":["useOnMount","callback","React","useSound","src","volume","playbackRate","soundEnabled","interrupt","onload","delegated","HowlConstructor","useRef","isMounted","useState","isPlaying","setIsPlaying","duration","setDuration","sound","setSound","handleLoad","call","current","then","mod","Howl","Array","isArray","rate","useEffect","JSON","stringify","play","useCallback","options","forceSoundEnabled","stop","id","once","playing","pause","returnedValue"],"mappings":"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"}